{"ast":null,"code":"import { loading, logout, updateDatabank } from \"./Actions\";\nimport { CalculateOrcamentosPrime } from \"./CalculateOrcamentosPrime\";\nimport CallBackend from \"./CallBackend\";\nexport const getUserInfo = () => {\n  return async (dispatch, getState) => {\n    dispatch(loading(true));\n    let {\n      socket\n    } = getState().pages;\n    let token = localStorage.getItem(\"token\");\n\n    if (token) {\n      await CallBackend(socket, \"getUserInfo\", token).then(async r => {\n        await dispatch(updateDatabank({\n          userInfo: r.informacoes\n        }));\n        await dispatch(updateDatabank({\n          produtos: r.produtos\n        }));\n        await dispatch(CalculateOrcamentosPrime(r.orcamentos));\n        dispatch(loading(false));\n      }).catch(err => {\n        dispatch(logout());\n        dispatch(loading(false));\n      });\n    } else {\n      dispatch(logout());\n      dispatch(loading(false));\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/GetUserInfo.js"],"names":["loading","logout","updateDatabank","CalculateOrcamentosPrime","CallBackend","getUserInfo","dispatch","getState","socket","pages","token","localStorage","getItem","then","r","userInfo","informacoes","produtos","orcamentos","catch","err"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,cAA1B,QAAgD,WAAhD;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCD,IAAAA,QAAQ,CAACN,OAAO,CAAC,IAAD,CAAR,CAAR;AACA,QAAI;AAAEQ,MAAAA;AAAF,QAAaD,QAAQ,GAAGE,KAA5B;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,QAAIF,KAAJ,EAAW;AACT,YAAMN,WAAW,CAACI,MAAD,EAAS,aAAT,EAAwBE,KAAxB,CAAX,CACHG,IADG,CACE,MAAOC,CAAP,IAAa;AACjB,cAAMR,QAAQ,CAACJ,cAAc,CAAC;AAAEa,UAAAA,QAAQ,EAAED,CAAC,CAACE;AAAd,SAAD,CAAf,CAAd;AACA,cAAMV,QAAQ,CAACJ,cAAc,CAAC;AAAEe,UAAAA,QAAQ,EAAEH,CAAC,CAACG;AAAd,SAAD,CAAf,CAAd;AACA,cAAMX,QAAQ,CAACH,wBAAwB,CAACW,CAAC,CAACI,UAAH,CAAzB,CAAd;AACAZ,QAAAA,QAAQ,CAACN,OAAO,CAAC,KAAD,CAAR,CAAR;AACD,OANG,EAOHmB,KAPG,CAOIC,GAAD,IAAS;AACdd,QAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACAK,QAAAA,QAAQ,CAACN,OAAO,CAAC,KAAD,CAAR,CAAR;AACD,OAVG,CAAN;AAWD,KAZD,MAYO;AACLM,MAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACAK,MAAAA,QAAQ,CAACN,OAAO,CAAC,KAAD,CAAR,CAAR;AACD;AACF,GApBD;AAqBD,CAtBM","sourcesContent":["import { loading, logout, updateDatabank } from \"./Actions\";\r\nimport { CalculateOrcamentosPrime } from \"./CalculateOrcamentosPrime\";\r\nimport CallBackend from \"./CallBackend\";\r\n\r\nexport const getUserInfo = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(loading(true));\r\n    let { socket } = getState().pages;\r\n    let token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      await CallBackend(socket, \"getUserInfo\", token)\r\n        .then(async (r) => {\r\n          await dispatch(updateDatabank({ userInfo: r.informacoes }));\r\n          await dispatch(updateDatabank({ produtos: r.produtos }));\r\n          await dispatch(CalculateOrcamentosPrime(r.orcamentos));\r\n          dispatch(loading(false));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(logout());\r\n          dispatch(loading(false));\r\n        });\r\n    } else {\r\n      dispatch(logout());\r\n      dispatch(loading(false));\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}