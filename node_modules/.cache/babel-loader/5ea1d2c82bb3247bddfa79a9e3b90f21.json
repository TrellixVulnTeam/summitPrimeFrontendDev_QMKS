{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocan\\\\OneDrive\\\\Documents\\\\SummitPrime\\\\frontendDev\\\\src\\\\Screens\\\\SummitPrime\\\\Pages\\\\ClientesGold\\\\ClientesGoldMainTable.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const ClientesGoldMainTable = () => {\n  _s();\n\n  const dataa = useSelector(state => state.clientesGold.data);\n  let headers = Object.keys(dataa);\n  const labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    const header = headers[i];\n    let headerArrumado = header.slice(2, 4) + \"/\" + header.slice(0, 2);\n    labels.push(headerArrumado);\n  }\n\n  const options = {\n    scales: {\n      x: {\n        grid: {\n          color: \"#00000000\"\n        },\n        ticks: {\n          color: \"#ffffff\"\n        }\n      },\n      y: {\n        grid: {\n          color: \"#ffffff\"\n        },\n        ticks: {\n          color: \"#ffffff\"\n        }\n      }\n    }\n  };\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Clientes Ouro\",\n      data: headers.map(header => {\n        return dataa[header].golds ? dataa[header].golds.length : 0;\n      }),\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }, {\n      label: \"Clientes Ouro Faturados\",\n      data: headers.map(header => {\n        let numFat = 0;\n\n        if (dataa[header].golds) {\n          for (let j = 0; j < dataa[header].golds.length; j++) {\n            const golds = dataa[header].golds[j];\n\n            if (golds.isFaturado) {\n              numFat += 1;\n            }\n          }\n        }\n\n        return numFat;\n      }),\n      borderColor: \"rgb(53, 162, 235)\",\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ClientesGoldMainTable, \"bAGneq+WqPKvywjqif/ufcTyoxQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = ClientesGoldMainTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientesGoldMainTable\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Screens/SummitPrime/Pages/ClientesGold/ClientesGoldMainTable.js"],"names":["React","useSelector","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","register","ClientesGoldMainTable","dataa","state","clientesGold","data","headers","Object","keys","labels","i","length","header","headerArrumado","slice","push","options","scales","x","grid","color","ticks","y","datasets","label","map","golds","borderColor","backgroundColor","numFat","j","isFaturado"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const ClientesGoldMainTable = () => {\r\n  const dataa = useSelector((state) => state.clientesGold.data);\r\n  let headers = Object.keys(dataa);\r\n  const labels = [];\r\n\r\n  for (let i = 0; i < headers.length; i++) {\r\n    const header = headers[i];\r\n    let headerArrumado = header.slice(2, 4) + \"/\" + header.slice(0, 2);\r\n    labels.push(headerArrumado);\r\n  }\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          color: \"#00000000\",\r\n        },\r\n\r\n        ticks: {\r\n          color: \"#ffffff\",\r\n        },\r\n      },\r\n      y: {\r\n        grid: {\r\n          color: \"#ffffff\",\r\n        },\r\n        ticks: {\r\n          color: \"#ffffff\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Clientes Ouro\",\r\n        data: headers.map((header) => {\r\n          return dataa[header].golds ? dataa[header].golds.length : 0;\r\n        }),\r\n        borderColor: \"rgb(255, 99, 132)\",\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n      },\r\n      {\r\n        label: \"Clientes Ouro Faturados\",\r\n        data: headers.map((header) => {\r\n          let numFat = 0;\r\n          if (dataa[header].golds) {\r\n            for (let j = 0; j < dataa[header].golds.length; j++) {\r\n              const golds = dataa[header].golds[j];\r\n\r\n              if (golds.isFaturado) {\r\n                numFat += 1;\r\n              }\r\n            }\r\n          }\r\n          return numFat;\r\n        }),\r\n        borderColor: \"rgb(53, 162, 235)\",\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Bar options={options} data={data} />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}