{"ast":null,"code":"import { addOrcamento, changeOrcamentoAtivo, savingOrcamento, toggleLoading, toggleModal, toggleSaving, updateOrcamentos } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nimport { ChangePage } from \"./ChangePage\";\n\nvar crypto = require(\"crypto\");\n\nexport const SaveOrcamento = orcamento => {\n  return (dispatch, getState) => {\n    try {\n      let pedido = { ...orcamento\n      };\n      dispatch(toggleSaving(true));\n      let {\n        socket\n      } = getState().pages;\n      let orcamentos = getState().databank.orcamentosPrime;\n      let salvos;\n      let token = localStorage.getItem(\"token\");\n      let id;\n\n      if (Object.keys(orcamento)[[0]] === \"id\") {\n        orcamento = salvos.find(orc => {\n          return orc.id === orcamento.id;\n        });\n      } else if (Object.keys(orcamento)[[0]] === \"index\") {\n        orcamento = salvos[orcamento.index];\n      } else if (Object.keys(orcamento)[[0]] === \"titulo\") {\n        id = crypto.randomBytes(20).toString(\"hex\").toUpperCase();\n        orcamento = {\n          id,\n          titulo: orcamento.titulo,\n          pagamentoAntecipado: false,\n          itens: [{}],\n          criadoEm: new Date(),\n          ultimaModificacao: new Date()\n        };\n      }\n\n      let {\n        subTotal,\n        subTotalDisponivel,\n        total,\n        totalDisponivel,\n        ...rest\n      } = orcamento;\n      orcamento = { ...rest,\n        ultimaModificacao: new Date()\n      };\n      callBackend(socket, \"saveOrcamento\", token, { ...orcamento\n      }).then(r => {\n        dispatch(toggleSaving(false));\n      });\n\n      if (Object.keys(pedido)[[0]] === \"titulo\") {\n        dispatch(addOrcamento(orcamento));\n        dispatch(changeOrcamentoAtivo(orcamentos.length));\n        dispatch(ChangePage(\"orcamentoAtual\"));\n        dispatch(toggleModal(\"criarOrcamento\", false));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n_c = SaveOrcamento;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveOrcamento\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/SaveOrcamento.js"],"names":["addOrcamento","changeOrcamentoAtivo","savingOrcamento","toggleLoading","toggleModal","toggleSaving","updateOrcamentos","callBackend","ChangePage","crypto","require","SaveOrcamento","orcamento","dispatch","getState","pedido","socket","pages","orcamentos","databank","orcamentosPrime","salvos","token","localStorage","getItem","id","Object","keys","find","orc","index","randomBytes","toString","toUpperCase","titulo","pagamentoAntecipado","itens","criadoEm","Date","ultimaModificacao","subTotal","subTotalDisponivel","total","totalDisponivel","rest","then","r","length","e","console","log"],"mappings":"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","sourcesContent":["import {\r\n  addOrcamento,\r\n  changeOrcamentoAtivo,\r\n  savingOrcamento,\r\n  toggleLoading,\r\n  toggleModal,\r\n  toggleSaving,\r\n  updateOrcamentos,\r\n} from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\nimport { ChangePage } from \"./ChangePage\";\r\nvar crypto = require(\"crypto\");\r\n\r\nexport const SaveOrcamento = (orcamento) => {\r\n  return (dispatch, getState) => {\r\n    try {\r\n      let pedido = { ...orcamento };\r\n      dispatch(toggleSaving(true));\r\n      let { socket } = getState().pages;\r\n      let orcamentos = getState().databank.orcamentosPrime;\r\n      let salvos;\r\n      let token = localStorage.getItem(\"token\");\r\n      let id;\r\n      if (Object.keys(orcamento)[[0]] === \"id\") {\r\n        orcamento = salvos.find((orc) => {\r\n          return orc.id === orcamento.id;\r\n        });\r\n      } else if (Object.keys(orcamento)[[0]] === \"index\") {\r\n        orcamento = salvos[orcamento.index];\r\n      } else if (Object.keys(orcamento)[[0]] === \"titulo\") {\r\n        id = crypto.randomBytes(20).toString(\"hex\").toUpperCase();\r\n        orcamento = {\r\n          id,\r\n          titulo: orcamento.titulo,\r\n          pagamentoAntecipado: false,\r\n          itens: [{}],\r\n          criadoEm: new Date(),\r\n          ultimaModificacao: new Date(),\r\n        };\r\n      }\r\n      let { subTotal, subTotalDisponivel, total, totalDisponivel, ...rest } =\r\n        orcamento;\r\n      orcamento = { ...rest, ultimaModificacao: new Date() };\r\n      callBackend(socket, \"saveOrcamento\", token, { ...orcamento }).then(\r\n        (r) => {\r\n          dispatch(toggleSaving(false));\r\n        }\r\n      );\r\n      if (Object.keys(pedido)[[0]] === \"titulo\") {\r\n        dispatch(addOrcamento(orcamento));\r\n        dispatch(changeOrcamentoAtivo(orcamentos.length));\r\n        dispatch(ChangePage(\"orcamentoAtual\"));\r\n        dispatch(toggleModal(\"criarOrcamento\", false));\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}