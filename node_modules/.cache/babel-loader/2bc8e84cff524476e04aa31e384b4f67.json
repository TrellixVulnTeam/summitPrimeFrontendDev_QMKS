{"ast":null,"code":"import { setFiltros } from \"../Actions\";\nexport const ToggleFiltros = (mlce, categorias, isChecked) => {\n  return async (dispatch, getState) => {\n    let produtos = getState().databank.produtos;\n    let filtros = getState().loja.filtros;\n    console.log(mlce);\n    console.log(categorias);\n    console.log(isChecked);\n    filtros[mlce.toLowerCase()][categorias].checked = isChecked;\n    let allChecked = [];\n    let mlceKeys = Object.keys(filtros);\n\n    for (let i = 0; i < mlceKeys.length; i++) {\n      const mlceKey = filtros[mlceKeys[i]];\n      let categoriasKeys = Object.keys(mlceKey);\n\n      for (let j = 0; j < categoriasKeys.length; j++) {\n        const categoriasKey = mlceKey[categoriasKeys[j]];\n        console.log(categoriasKey);\n\n        if (categoriasKey.checked) {\n          allChecked.push([mlceKeys[i], categoriasKey[j]]);\n        }\n      }\n    }\n\n    console.log(allChecked);\n    dispatch(setFiltros(filtros));\n  };\n};\n_c = ToggleFiltros;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleFiltros\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/Loja/ToggleFiltros.js"],"names":["setFiltros","ToggleFiltros","mlce","categorias","isChecked","dispatch","getState","produtos","databank","filtros","loja","console","log","toLowerCase","checked","allChecked","mlceKeys","Object","keys","i","length","mlceKey","categoriasKeys","j","categoriasKey","push"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,SAAnB,KAAiC;AAC5D,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAIC,QAAQ,GAAGD,QAAQ,GAAGE,QAAX,CAAoBD,QAAnC;AACA,QAAIE,OAAO,GAAGH,QAAQ,GAAGI,IAAX,CAAgBD,OAA9B;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AAEAK,IAAAA,OAAO,CAACP,IAAI,CAACW,WAAL,EAAD,CAAP,CAA4BV,UAA5B,EAAwCW,OAAxC,GAAkDV,SAAlD;AAEA,QAAIW,UAAU,GAAG,EAAjB;AAEA,QAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYT,OAAZ,CAAf;;AACA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAME,OAAO,GAAGZ,OAAO,CAACO,QAAQ,CAACG,CAAD,CAAT,CAAvB;AACA,UAAIG,cAAc,GAAGL,MAAM,CAACC,IAAP,CAAYG,OAAZ,CAArB;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACF,MAAnC,EAA2CG,CAAC,EAA5C,EAAgD;AAC9C,cAAMC,aAAa,GAAGH,OAAO,CAACC,cAAc,CAACC,CAAD,CAAf,CAA7B;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYY,aAAZ;;AAEA,YAAIA,aAAa,CAACV,OAAlB,EAA2B;AACzBC,UAAAA,UAAU,CAACU,IAAX,CAAgB,CAACT,QAAQ,CAACG,CAAD,CAAT,EAAcK,aAAa,CAACD,CAAD,CAA3B,CAAhB;AACD;AACF;AACF;;AAEDZ,IAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACAV,IAAAA,QAAQ,CAACL,UAAU,CAACS,OAAD,CAAX,CAAR;AACD,GA5BD;AA6BD,CA9BM;KAAMR,a","sourcesContent":["import { setFiltros } from \"../Actions\";\r\n\r\nexport const ToggleFiltros = (mlce, categorias, isChecked) => {\r\n  return async (dispatch, getState) => {\r\n    let produtos = getState().databank.produtos;\r\n    let filtros = getState().loja.filtros;\r\n\r\n    console.log(mlce);\r\n    console.log(categorias);\r\n    console.log(isChecked);\r\n\r\n    filtros[mlce.toLowerCase()][categorias].checked = isChecked;\r\n\r\n    let allChecked = [];\r\n\r\n    let mlceKeys = Object.keys(filtros);\r\n    for (let i = 0; i < mlceKeys.length; i++) {\r\n      const mlceKey = filtros[mlceKeys[i]];\r\n      let categoriasKeys = Object.keys(mlceKey);\r\n      for (let j = 0; j < categoriasKeys.length; j++) {\r\n        const categoriasKey = mlceKey[categoriasKeys[j]];\r\n        console.log(categoriasKey);\r\n\r\n        if (categoriasKey.checked) {\r\n          allChecked.push([mlceKeys[i], categoriasKey[j]]);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(allChecked);\r\n    dispatch(setFiltros(filtros));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}