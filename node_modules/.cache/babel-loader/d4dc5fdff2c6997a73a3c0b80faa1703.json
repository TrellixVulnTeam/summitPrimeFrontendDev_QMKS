{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocan\\\\OneDrive\\\\Documents\\\\SummitPrime\\\\frontendDev\\\\src\\\\SummitPrime\\\\Pages\\\\Loja\\\\LojaFiltro.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SetOrdem } from \"../../../Redux/Actions/Loja/SetOrdem\";\nimport { ToggleFiltros } from \"../../../Redux/Actions/Loja/ToggleFiltros\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LojaFiltro = props => {\n  _s();\n\n  let {\n    titulo,\n    filtros,\n    checked,\n    activo\n  } = props;\n  let dispatch = useDispatch();\n  const ordens = useSelector(state => state.loja.ordens);\n  let ordemAtiva = ordens.find(ordem => {\n    return ordem.active === true;\n  });\n\n  const capitalize = string => [...string.slice(0, 1).toUpperCase(), ...string.slice(1)].join(\"\");\n\n  titulo = titulo.split(\" \").map(string => capitalize(string)).join(\" \");\n  let filtrosActive = [];\n  let filtrosInactive = [];\n  let filtrosGeral = [];\n\n  if (filtros) {\n    let filtrosKeys = Object.keys(filtros);\n    filtrosKeys.sort();\n\n    for (let i = 0; i < filtrosKeys.length; i++) {\n      const filtroKey = filtrosKeys[i];\n\n      if (filtros[filtroKey].ativo === true) {\n        filtrosActive.push({ ...filtros[filtroKey],\n          nome: filtroKey\n        });\n      } else {\n        filtrosInactive.push({ ...filtros[filtroKey],\n          nome: filtroKey\n        });\n      }\n    }\n\n    filtrosGeral = [...filtrosActive, ...filtrosInactive];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    xs: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), filtrosGeral.map((filtroActive, index) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          style: {\n            padding: \"0px\",\n            width: \"max-content\",\n            maxWidth: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            checked: filtroActive.checked,\n            disabled: !filtroActive.ativo,\n            type: \"checkbox\",\n            id: \"vehicle1\",\n            name: \"vehicle1\",\n            value: \"Bike\",\n            onChange: e => {\n              dispatch(ToggleFiltros(titulo, filtroActive.nome, e.target.checked));\n              dispatch(SetOrdem(ordemAtiva.value));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"vehicle1\",\n            children: [\" \", filtroActive.nome, \" (\", filtroActive.quantidade, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LojaFiltro, \"3iX9S9Lf3PB4ByM+r0TEQss8fPI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LojaFiltro;\n\nvar _c;\n\n$RefreshReg$(_c, \"LojaFiltro\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/SummitPrime/Pages/Loja/LojaFiltro.js"],"names":["React","Col","Row","useDispatch","useSelector","SetOrdem","ToggleFiltros","LojaFiltro","props","titulo","filtros","checked","activo","dispatch","ordens","state","loja","ordemAtiva","find","ordem","active","capitalize","string","slice","toUpperCase","join","split","map","filtrosActive","filtrosInactive","filtrosGeral","filtrosKeys","Object","keys","sort","i","length","filtroKey","ativo","push","nome","filtroActive","index","padding","width","maxWidth","e","target","value","quantidade"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SetOrdem } from \"../../../Redux/Actions/Loja/SetOrdem\";\r\nimport { ToggleFiltros } from \"../../../Redux/Actions/Loja/ToggleFiltros\";\r\n\r\nexport const LojaFiltro = (props) => {\r\n  let { titulo, filtros, checked, activo } = props;\r\n\r\n  let dispatch = useDispatch();\r\n  const ordens = useSelector((state) => state.loja.ordens);\r\n  let ordemAtiva = ordens.find((ordem) => {\r\n    return ordem.active === true;\r\n  });\r\n\r\n  const capitalize = (string) =>\r\n    [...string.slice(0, 1).toUpperCase(), ...string.slice(1)].join(\"\");\r\n  titulo = titulo\r\n    .split(\" \")\r\n    .map((string) => capitalize(string))\r\n    .join(\" \");\r\n\r\n  let filtrosActive = [];\r\n  let filtrosInactive = [];\r\n  let filtrosGeral = [];\r\n  if (filtros) {\r\n    let filtrosKeys = Object.keys(filtros);\r\n    filtrosKeys.sort();\r\n    for (let i = 0; i < filtrosKeys.length; i++) {\r\n      const filtroKey = filtrosKeys[i];\r\n      if (filtros[filtroKey].ativo === true) {\r\n        filtrosActive.push({ ...filtros[filtroKey], nome: filtroKey });\r\n      } else {\r\n        filtrosInactive.push({ ...filtros[filtroKey], nome: filtroKey });\r\n      }\r\n    }\r\n    filtrosGeral = [...filtrosActive, ...filtrosInactive];\r\n  }\r\n\r\n  return (\r\n    <Col xs={true}>\r\n      <h5>{titulo}</h5>\r\n\r\n      {filtrosGeral.map((filtroActive, index) => {\r\n        return (\r\n          <Row key={index}>\r\n            <Col\r\n              xs={true}\r\n              style={{\r\n                padding: \"0px\",\r\n                width: \"max-content\",\r\n                maxWidth: \"none\",\r\n              }}\r\n            >\r\n              <input\r\n                checked={filtroActive.checked}\r\n                disabled={!filtroActive.ativo}\r\n                type=\"checkbox\"\r\n                id=\"vehicle1\"\r\n                name=\"vehicle1\"\r\n                value=\"Bike\"\r\n                onChange={(e) => {\r\n                  dispatch(\r\n                    ToggleFiltros(titulo, filtroActive.nome, e.target.checked)\r\n                  );\r\n                  dispatch(SetOrdem(ordemAtiva.value));\r\n                }}\r\n              />\r\n              <label htmlFor=\"vehicle1\">\r\n                {\" \"}\r\n                {filtroActive.nome} ({filtroActive.quantidade})\r\n              </label>{\" \"}\r\n              <br />\r\n            </Col>\r\n          </Row>\r\n        );\r\n      })}\r\n    </Col>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}