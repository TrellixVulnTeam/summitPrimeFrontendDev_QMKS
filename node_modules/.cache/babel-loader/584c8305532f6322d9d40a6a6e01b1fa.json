{"ast":null,"code":"import { changePage, loading, toggleModal } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nimport { CriarOrcamentoBranco } from \"./CriarOrcamentoBranco\";\nimport { saveOrcamento } from \"./SaveOrcamento\";\n\nlet crypto = require(\"crypto\"); // import { calcularValores } from \"./TabelaActions/CalcularValores\";\n\n\nconst csv2json = require(\"csvjson-csv2json\");\n\nexport const criarOrcamentoVnda = titulo => {\n  return async (dispatch, getState) => {\n    try {\n      let id = crypto.randomBytes(20).toString(\"hex\").toUpperCase();\n      let orcamento = {\n        id,\n        titulo,\n        pagamentoAntecipado: false,\n        itens: [],\n        criadoEm: new Date(),\n        ultimaModificacao: new Date()\n      };\n      let databank = getState().databank;\n      let config = getState().config;\n      let orcamentoIndex = databank.orcamentosPrime.length - 1;\n      let indexOrcamentoVnda = config.modals.criarOrcamentoVnda.id;\n      let orcamentoVnda = databank.orcamentosVnda[indexOrcamentoVnda];\n      let produtos = databank.produtos;\n      let produtosVnda = csv2json(orcamentoVnda[\"CSV\"]);\n\n      for (let i = 0; i < produtosVnda.length; i++) {\n        let {\n          Referência: sku,\n          Quantidade: quantidade\n        } = produtosVnda[i];\n        let item = produtos.find(produto => {\n          return produto.sku === sku;\n        });\n\n        if (item && quantidade) {\n          orcamento.itens[i] = { ...item,\n            quantidade\n          };\n        } else {\n          orcamento.itens[i] = {\n            sku\n          };\n        }\n      }\n\n      dispatch(addOrcamento(orcamento)); // await dispatch(saveOrcamento({ titulo }));\n      // // await dispatch(calcularValores());\n      // await dispatch(toggleModal(\"criarOrcamento\", false));\n      // await dispatch(toggleModal(\"sidebar\", true));\n      // await dispatch(changePage(\"orcamentoAtual\"));\n      // await dispatch(loading(false));\n      // await dispatch(toggleModal(\"instrucoes\", true));\n    } catch (e) {\n      console.log(e);\n      dispatch(loading(false));\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/CriarOrcamentoVnda.js"],"names":["changePage","loading","toggleModal","callBackend","CriarOrcamentoBranco","saveOrcamento","crypto","require","csv2json","criarOrcamentoVnda","titulo","dispatch","getState","id","randomBytes","toString","toUpperCase","orcamento","pagamentoAntecipado","itens","criadoEm","Date","ultimaModificacao","databank","config","orcamentoIndex","orcamentosPrime","length","indexOrcamentoVnda","modals","orcamentoVnda","orcamentosVnda","produtos","produtosVnda","i","Referência","sku","Quantidade","quantidade","item","find","produto","addOrcamento","e","console","log"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,WAA9B,QAAiD,WAAjD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB,C,CACA;;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAxB;;AAEA,OAAO,MAAME,kBAAkB,GAAIC,MAAD,IAAY;AAC5C,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAI;AACF,UAAIC,EAAE,GAAGP,MAAM,CAACQ,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,EAAuCC,WAAvC,EAAT;AACA,UAAIC,SAAS,GAAG;AACdJ,QAAAA,EADc;AAEdH,QAAAA,MAFc;AAGdQ,QAAAA,mBAAmB,EAAE,KAHP;AAIdC,QAAAA,KAAK,EAAE,EAJO;AAKdC,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,EALI;AAMdC,QAAAA,iBAAiB,EAAE,IAAID,IAAJ;AANL,OAAhB;AASA,UAAIE,QAAQ,GAAGX,QAAQ,GAAGW,QAA1B;AACA,UAAIC,MAAM,GAAGZ,QAAQ,GAAGY,MAAxB;AACA,UAAIC,cAAc,GAAGF,QAAQ,CAACG,eAAT,CAAyBC,MAAzB,GAAkC,CAAvD;AACA,UAAIC,kBAAkB,GAAGJ,MAAM,CAACK,MAAP,CAAcpB,kBAAd,CAAiCI,EAA1D;AACA,UAAIiB,aAAa,GAAGP,QAAQ,CAACQ,cAAT,CAAwBH,kBAAxB,CAApB;AACA,UAAII,QAAQ,GAAGT,QAAQ,CAACS,QAAxB;AACA,UAAIC,YAAY,GAAGzB,QAAQ,CAACsB,aAAa,CAAC,KAAD,CAAd,CAA3B;;AAEA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACN,MAAjC,EAAyCO,CAAC,EAA1C,EAA8C;AAC5C,YAAI;AAAEC,UAAAA,UAAU,EAAEC,GAAd;AAAmBC,UAAAA,UAAU,EAAEC;AAA/B,YAA8CL,YAAY,CAACC,CAAD,CAA9D;AACA,YAAIK,IAAI,GAAGP,QAAQ,CAACQ,IAAT,CAAeC,OAAD,IAAa;AACpC,iBAAOA,OAAO,CAACL,GAAR,KAAgBA,GAAvB;AACD,SAFU,CAAX;;AAGA,YAAIG,IAAI,IAAID,UAAZ,EAAwB;AACtBrB,UAAAA,SAAS,CAACE,KAAV,CAAgBe,CAAhB,IAAqB,EAAE,GAAGK,IAAL;AAAWD,YAAAA;AAAX,WAArB;AACD,SAFD,MAEO;AACLrB,UAAAA,SAAS,CAACE,KAAV,CAAgBe,CAAhB,IAAqB;AAAEE,YAAAA;AAAF,WAArB;AACD;AACF;;AACDzB,MAAAA,QAAQ,CAAC+B,YAAY,CAACzB,SAAD,CAAb,CAAR,CA9BE,CAgCF;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAvCD,CAuCE,OAAO0B,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAhC,MAAAA,QAAQ,CAACV,OAAO,CAAC,KAAD,CAAR,CAAR;AACD;AACF,GA5CD;AA6CD,CA9CM","sourcesContent":["import { changePage, loading, toggleModal } from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\nimport { CriarOrcamentoBranco } from \"./CriarOrcamentoBranco\";\r\nimport { saveOrcamento } from \"./SaveOrcamento\";\r\nlet crypto = require(\"crypto\");\r\n// import { calcularValores } from \"./TabelaActions/CalcularValores\";\r\n\r\nconst csv2json = require(\"csvjson-csv2json\");\r\n\r\nexport const criarOrcamentoVnda = (titulo) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let id = crypto.randomBytes(20).toString(\"hex\").toUpperCase();\r\n      let orcamento = {\r\n        id,\r\n        titulo,\r\n        pagamentoAntecipado: false,\r\n        itens: [],\r\n        criadoEm: new Date(),\r\n        ultimaModificacao: new Date(),\r\n      };\r\n\r\n      let databank = getState().databank;\r\n      let config = getState().config;\r\n      let orcamentoIndex = databank.orcamentosPrime.length - 1;\r\n      let indexOrcamentoVnda = config.modals.criarOrcamentoVnda.id;\r\n      let orcamentoVnda = databank.orcamentosVnda[indexOrcamentoVnda];\r\n      let produtos = databank.produtos;\r\n      let produtosVnda = csv2json(orcamentoVnda[\"CSV\"]);\r\n\r\n      for (let i = 0; i < produtosVnda.length; i++) {\r\n        let { Referência: sku, Quantidade: quantidade } = produtosVnda[i];\r\n        let item = produtos.find((produto) => {\r\n          return produto.sku === sku;\r\n        });\r\n        if (item && quantidade) {\r\n          orcamento.itens[i] = { ...item, quantidade };\r\n        } else {\r\n          orcamento.itens[i] = { sku };\r\n        }\r\n      }\r\n      dispatch(addOrcamento(orcamento));\r\n\r\n      // await dispatch(saveOrcamento({ titulo }));\r\n      // // await dispatch(calcularValores());\r\n      // await dispatch(toggleModal(\"criarOrcamento\", false));\r\n      // await dispatch(toggleModal(\"sidebar\", true));\r\n      // await dispatch(changePage(\"orcamentoAtual\"));\r\n      // await dispatch(loading(false));\r\n      // await dispatch(toggleModal(\"instrucoes\", true));\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(loading(false));\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}