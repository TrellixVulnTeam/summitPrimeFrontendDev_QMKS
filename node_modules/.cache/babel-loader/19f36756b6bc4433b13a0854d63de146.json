{"ast":null,"code":"import { changeItens } from \"../Actions\";\nimport { saveOrcamento } from \"../SaveOrcamento\";\nexport const DeleteItens = sku => {\n  return (dispatch, getState) => {\n    let orcamentos = getState().orcamentos;\n    let indexOrcamento = orcamentos.salvos.findIndex(orcamento => orcamento.id === orcamentos.atual);\n    let itens = getState().orcamentos.salvos[indexOrcamento].itens;\n    let index = itens.findIndex(item => item.sku === sku);\n\n    if (itens.length <= 1) {\n      itens.push({});\n    }\n\n    itens.splice(index, 1);\n    dispatch(changeItens(itens, indexOrcamento));\n    dispatch(saveOrcamento({\n      index: indexOrcamento\n    }));\n  };\n};\n_c = DeleteItens;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteItens\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/TabelaActions/DeleteItens.js"],"names":["changeItens","saveOrcamento","DeleteItens","sku","dispatch","getState","orcamentos","indexOrcamento","salvos","findIndex","orcamento","id","atual","itens","index","item","length","push","splice"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,WAAW,GAAIC,GAAD,IAAS;AAClC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAIC,UAAU,GAAGD,QAAQ,GAAGC,UAA5B;AACA,QAAIC,cAAc,GAAGD,UAAU,CAACE,MAAX,CAAkBC,SAAlB,CAClBC,SAAD,IAAeA,SAAS,CAACC,EAAV,KAAiBL,UAAU,CAACM,KADxB,CAArB;AAIA,QAAIC,KAAK,GAAGR,QAAQ,GAAGC,UAAX,CAAsBE,MAAtB,CAA6BD,cAA7B,EAA6CM,KAAzD;AACA,QAAIC,KAAK,GAAGD,KAAK,CAACJ,SAAN,CAAiBM,IAAD,IAAUA,IAAI,CAACZ,GAAL,KAAaA,GAAvC,CAAZ;;AACA,QAAIU,KAAK,CAACG,MAAN,IAAgB,CAApB,EAAuB;AACrBH,MAAAA,KAAK,CAACI,IAAN,CAAW,EAAX;AACD;;AAEDJ,IAAAA,KAAK,CAACK,MAAN,CAAaJ,KAAb,EAAoB,CAApB;AAEAV,IAAAA,QAAQ,CAACJ,WAAW,CAACa,KAAD,EAAQN,cAAR,CAAZ,CAAR;AACAH,IAAAA,QAAQ,CAACH,aAAa,CAAC;AAAEa,MAAAA,KAAK,EAAEP;AAAT,KAAD,CAAd,CAAR;AACD,GAhBD;AAiBD,CAlBM;KAAML,W","sourcesContent":["import { changeItens } from \"../Actions\";\r\nimport { saveOrcamento } from \"../SaveOrcamento\";\r\n\r\nexport const DeleteItens = (sku) => {\r\n  return (dispatch, getState) => {\r\n    let orcamentos = getState().orcamentos;\r\n    let indexOrcamento = orcamentos.salvos.findIndex(\r\n      (orcamento) => orcamento.id === orcamentos.atual\r\n    );\r\n\r\n    let itens = getState().orcamentos.salvos[indexOrcamento].itens;\r\n    let index = itens.findIndex((item) => item.sku === sku);\r\n    if (itens.length <= 1) {\r\n      itens.push({});\r\n    }\r\n\r\n    itens.splice(index, 1);\r\n\r\n    dispatch(changeItens(itens, indexOrcamento));\r\n    dispatch(saveOrcamento({ index: indexOrcamento }));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}