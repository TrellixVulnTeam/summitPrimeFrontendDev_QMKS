{"ast":null,"code":"import { changeItens } from \"../Actions\";\nimport { SaveOrcamento } from \"../SaveOrcamento\";\nexport const ChangeSku = (index, sku) => {\n  return async (dispatch, getState) => {\n    let indexOrcamento = getState().config.orcamentoAtivo;\n    let itens = getState().databank.orcamentosPrime[indexOrcamento].itens;\n    itens[index] = {\n      sku\n    };\n    dispatch(changeItens(itens, indexOrcamento));\n    dispatch(SaveOrcamento({\n      index: indexOrcamento\n    }));\n  };\n}; // let produtos = getState().orcamentos.produtos;\n// if (sku && sku.toString().length > 5 && sku / 6000 > 1) {\n//   let r = produtos.find((produto) => {\n//     return produto.sku === parseInt(sku);\n//   });\n//   await dispatch(trocarItem(r, index, indexOrcamento));\n//   dispatch(saveOrcamento({ index: indexOrcamento }));\n// } else {\n//   await dispatch(\n//     ChangeItens(\n//       {\n//         sku,\n//         nome: \"\",\n//         valor: 0,\n//         valorReal: 0,\n//         quantidade: 0,\n//         preco: 0,\n//         multiplo: 0,\n//         caixaMaster: 0,\n//         estoque: \"\",\n//       },\n//       index,\n//       indexOrcamento\n//     )\n//   );\n//   dispatch(saveOrcamento({ index: indexOrcamento }));\n// }\n\n_c = ChangeSku;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeSku\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/TabelaActions/ChangeSku.js"],"names":["changeItens","SaveOrcamento","ChangeSku","index","sku","dispatch","getState","indexOrcamento","config","orcamentoAtivo","itens","databank","orcamentosPrime"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAIC,cAAc,GAAGD,QAAQ,GAAGE,MAAX,CAAkBC,cAAvC;AACA,QAAIC,KAAK,GAAGJ,QAAQ,GAAGK,QAAX,CAAoBC,eAApB,CAAoCL,cAApC,EAAoDG,KAAhE;AACAA,IAAAA,KAAK,CAACP,KAAD,CAAL,GAAe;AAAEC,MAAAA;AAAF,KAAf;AACAC,IAAAA,QAAQ,CAACL,WAAW,CAACU,KAAD,EAAQH,cAAR,CAAZ,CAAR;AACAF,IAAAA,QAAQ,CAACJ,aAAa,CAAC;AAAEE,MAAAA,KAAK,EAAEI;AAAT,KAAD,CAAd,CAAR;AACD,GAND;AAOD,CARM,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAnCaL,S","sourcesContent":["import { changeItens } from \"../Actions\";\r\nimport { SaveOrcamento } from \"../SaveOrcamento\";\r\n\r\nexport const ChangeSku = (index, sku) => {\r\n  return async (dispatch, getState) => {\r\n    let indexOrcamento = getState().config.orcamentoAtivo;\r\n    let itens = getState().databank.orcamentosPrime[indexOrcamento].itens;\r\n    itens[index] = { sku };\r\n    dispatch(changeItens(itens, indexOrcamento));\r\n    dispatch(SaveOrcamento({ index: indexOrcamento }));\r\n  };\r\n};\r\n// let produtos = getState().orcamentos.produtos;\r\n// if (sku && sku.toString().length > 5 && sku / 6000 > 1) {\r\n//   let r = produtos.find((produto) => {\r\n//     return produto.sku === parseInt(sku);\r\n//   });\r\n//   await dispatch(trocarItem(r, index, indexOrcamento));\r\n//   dispatch(saveOrcamento({ index: indexOrcamento }));\r\n// } else {\r\n//   await dispatch(\r\n//     ChangeItens(\r\n//       {\r\n//         sku,\r\n//         nome: \"\",\r\n//         valor: 0,\r\n//         valorReal: 0,\r\n//         quantidade: 0,\r\n//         preco: 0,\r\n//         multiplo: 0,\r\n//         caixaMaster: 0,\r\n//         estoque: \"\",\r\n//       },\r\n//       index,\r\n//       indexOrcamento\r\n//     )\r\n//   );\r\n//   dispatch(saveOrcamento({ index: indexOrcamento }));\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}