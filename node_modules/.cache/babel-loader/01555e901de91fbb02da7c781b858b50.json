{"ast":null,"code":"import { savingOrcamento } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nexport const saveOrcamento = infos => {\n  return (dispatch, getState) => {\n    dispatch(savingOrcamento(true));\n    let {\n      socket\n    } = getState().pages;\n    let token = localStorage.getItem(\"token\");\n    let {\n      subTotal,\n      subTotalDisponivel,\n      total,\n      totalDisponivel,\n      ...rest\n    } = infos;\n    let orcamento = { ...rest,\n      ultimaModificacao: new Date()\n    };\n    callBackend(socket, \"saveOrcamento\", token, { ...orcamento\n    }).then(r => {\n      dispatch(savingOrcamento(false));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/SaveOrcamento.js"],"names":["savingOrcamento","callBackend","saveOrcamento","infos","dispatch","getState","socket","pages","token","localStorage","getItem","subTotal","subTotalDisponivel","total","totalDisponivel","rest","orcamento","ultimaModificacao","Date","then","r"],"mappings":"AAAA,SAASA,eAAT,QAAgC,WAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BD,IAAAA,QAAQ,CAACJ,eAAe,CAAC,IAAD,CAAhB,CAAR;AACA,QAAI;AAAEM,MAAAA;AAAF,QAAaD,QAAQ,GAAGE,KAA5B;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,QAAI;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,kBAAZ;AAAgCC,MAAAA,KAAhC;AAAuCC,MAAAA,eAAvC;AAAwD,SAAGC;AAA3D,QACFZ,KADF;AAEA,QAAIa,SAAS,GAAG,EAAE,GAAGD,IAAL;AAAWE,MAAAA,iBAAiB,EAAE,IAAIC,IAAJ;AAA9B,KAAhB;AACAjB,IAAAA,WAAW,CAACK,MAAD,EAAS,eAAT,EAA0BE,KAA1B,EAAiC,EAAE,GAAGQ;AAAL,KAAjC,CAAX,CAA8DG,IAA9D,CAAoEC,CAAD,IAAO;AACxEhB,MAAAA,QAAQ,CAACJ,eAAe,CAAC,KAAD,CAAhB,CAAR;AACD,KAFD;AAGD,GAVD;AAWD,CAZM","sourcesContent":["import { savingOrcamento } from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\n\r\nexport const saveOrcamento = (infos) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(savingOrcamento(true));\r\n    let { socket } = getState().pages;\r\n    let token = localStorage.getItem(\"token\");\r\n    let { subTotal, subTotalDisponivel, total, totalDisponivel, ...rest } =\r\n      infos;\r\n    let orcamento = { ...rest, ultimaModificacao: new Date() };\r\n    callBackend(socket, \"saveOrcamento\", token, { ...orcamento }).then((r) => {\r\n      dispatch(savingOrcamento(false));\r\n    });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}