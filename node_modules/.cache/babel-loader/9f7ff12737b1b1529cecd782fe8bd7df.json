{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocan\\\\OneDrive\\\\Documents\\\\SummitPrime\\\\frontendDev\\\\src\\\\Screens\\\\SummitPrime\\\\Pages\\\\ClientesGold\\\\ClientesGoldTableByFilter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const ClientesGoldTableByFilter = props => {\n  _s();\n\n  const dataa = useSelector(state => state.clientesGold.data);\n  let headers = Object.keys(dataa);\n  const labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    const header = headers[i];\n    let headerArrumado = header.slice(2, 4) + \"/\" + header.slice(0, 2);\n    labels.push(headerArrumado);\n  }\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: props.input.p.toUpperCase(),\n        color: \"#ffffff\",\n        font: {\n          size: 30\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          color: \"#00000000\"\n        },\n        ticks: {\n          color: \"#ffffff\"\n        }\n      },\n      y: {\n        grid: {\n          color: \"#ffffff\"\n        },\n        ticks: {\n          color: \"#ffffff\"\n        }\n      }\n    }\n  };\n  const data = {\n    labels,\n    datasets: [{\n      label: props.input.p,\n      data: headers.map(header => {\n        console.log(Object.keys(dataa[header][props.input.name]).length);\n        return dataa[header][props.input.name] ? Object.keys(dataa[header][props.input.name]).length : 0;\n      }),\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ClientesGoldTableByFilter, \"bAGneq+WqPKvywjqif/ufcTyoxQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = ClientesGoldTableByFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientesGoldTableByFilter\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Screens/SummitPrime/Pages/ClientesGold/ClientesGoldTableByFilter.js"],"names":["React","useSelector","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","register","ClientesGoldTableByFilter","props","dataa","state","clientesGold","data","headers","Object","keys","labels","i","length","header","headerArrumado","slice","push","options","plugins","title","display","text","input","p","toUpperCase","color","font","size","scales","x","grid","ticks","y","datasets","label","map","console","log","name","borderColor","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const ClientesGoldTableByFilter = (props) => {\r\n  const dataa = useSelector((state) => state.clientesGold.data);\r\n  let headers = Object.keys(dataa);\r\n  const labels = [];\r\n\r\n  for (let i = 0; i < headers.length; i++) {\r\n    const header = headers[i];\r\n    let headerArrumado = header.slice(2, 4) + \"/\" + header.slice(0, 2);\r\n    labels.push(headerArrumado);\r\n  }\r\n  const options = {\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: props.input.p.toUpperCase(),\r\n        color: \"#ffffff\",\r\n        font: {\r\n          size: 30,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          color: \"#00000000\",\r\n        },\r\n\r\n        ticks: {\r\n          color: \"#ffffff\",\r\n        },\r\n      },\r\n      y: {\r\n        grid: {\r\n          color: \"#ffffff\",\r\n        },\r\n        ticks: {\r\n          color: \"#ffffff\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: props.input.p,\r\n        data: headers.map((header) => {\r\n          console.log(Object.keys(dataa[header][props.input.name]).length);\r\n          return dataa[header][props.input.name]\r\n            ? Object.keys(dataa[header][props.input.name]).length\r\n            : 0;\r\n        }),\r\n        borderColor: \"rgb(255, 99, 132)\",\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Bar options={options} data={data} />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}