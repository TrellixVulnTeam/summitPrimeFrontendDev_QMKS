{"ast":null,"code":"import { changePage, loading, toggleModal } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nimport { saveOrcamento } from \"./SaveOrcamento\"; // import { calcularValores } from \"./TabelaActions/CalcularValores\";\n\nconst csv2json = require(\"csvjson-csv2json\");\n\nexport const criarOrcamentoVnda = titulo => {\n  return async (dispatch, getState) => {// try {\n    //   dispatch(loading(true));\n    //   let informacoes = getState().informacoes;\n    //   let indexVnda = getState().modals.criarOrcamento.vnda;\n    //   let orcamento = getState().orcamentos.vnda[indexVnda];\n    //   let token = localStorage.getItem(\"token\");\n    //   let produtos = [];\n    //   let produtosRaw = csv2json(orcamento[\"CSV\"]);\n    //   for (let i = 0; i < produtosRaw.length; i++) {\n    //     let { Referência: sku, Quantidade: quantidade } = produtosRaw[i];\n    //     let data = { sku, tabela: informacoes.tabela, UF: informacoes.UF };\n    //     await callBackend(\"/getProduto\", token, data).then((resp) => {\n    //       resp.valor = parseFloat(resp.valor);\n    //       quantidade = parseInt(quantidade);\n    //       produtos.push({ ...resp, quantidade, valorReal: 0, preco: 0 });\n    //     });\n    //   }\n    //   await dispatch(saveOrcamento({ titulo }));\n    //   // await dispatch(calcularValores());\n    //   await dispatch(toggleModal(\"criarOrcamento\", false));\n    //   await dispatch(toggleModal(\"sidebar\", true));\n    //   await dispatch(changePage(\"orcamentoAtual\"));\n    //   await dispatch(loading(false));\n    //   await dispatch(toggleModal(\"instrucoes\", true));\n    // } catch (e) {\n    //   console.log(e);\n    //   dispatch(loading(false));\n    // }\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/CriarOrcamentoVnda.js"],"names":["changePage","loading","toggleModal","callBackend","saveOrcamento","csv2json","require","criarOrcamentoVnda","titulo","dispatch","getState"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,WAA9B,QAAiD,WAAjD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B,C,CACA;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,MAAD,IAAY;AAC5C,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B,CACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA7BD;AA8BD,CA/BM","sourcesContent":["import { changePage, loading, toggleModal } from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\nimport { saveOrcamento } from \"./SaveOrcamento\";\r\n// import { calcularValores } from \"./TabelaActions/CalcularValores\";\r\n\r\nconst csv2json = require(\"csvjson-csv2json\");\r\n\r\nexport const criarOrcamentoVnda = (titulo) => {\r\n  return async (dispatch, getState) => {\r\n    // try {\r\n    //   dispatch(loading(true));\r\n    //   let informacoes = getState().informacoes;\r\n    //   let indexVnda = getState().modals.criarOrcamento.vnda;\r\n    //   let orcamento = getState().orcamentos.vnda[indexVnda];\r\n    //   let token = localStorage.getItem(\"token\");\r\n    //   let produtos = [];\r\n    //   let produtosRaw = csv2json(orcamento[\"CSV\"]);\r\n    //   for (let i = 0; i < produtosRaw.length; i++) {\r\n    //     let { Referência: sku, Quantidade: quantidade } = produtosRaw[i];\r\n    //     let data = { sku, tabela: informacoes.tabela, UF: informacoes.UF };\r\n    //     await callBackend(\"/getProduto\", token, data).then((resp) => {\r\n    //       resp.valor = parseFloat(resp.valor);\r\n    //       quantidade = parseInt(quantidade);\r\n    //       produtos.push({ ...resp, quantidade, valorReal: 0, preco: 0 });\r\n    //     });\r\n    //   }\r\n    //   await dispatch(saveOrcamento({ titulo }));\r\n    //   // await dispatch(calcularValores());\r\n    //   await dispatch(toggleModal(\"criarOrcamento\", false));\r\n    //   await dispatch(toggleModal(\"sidebar\", true));\r\n    //   await dispatch(changePage(\"orcamentoAtual\"));\r\n    //   await dispatch(loading(false));\r\n    //   await dispatch(toggleModal(\"instrucoes\", true));\r\n    // } catch (e) {\r\n    //   console.log(e);\r\n    //   dispatch(loading(false));\r\n    // }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}