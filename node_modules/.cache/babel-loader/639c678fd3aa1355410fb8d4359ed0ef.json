{"ast":null,"code":"import { updateOrcamentoPrime } from \"../Actions\";\nimport { SaveOrcamento } from \"../SaveOrcamento\";\nexport const ChangeQuantidade = (sku, quantidade) => {\n  return (dispatch, getState) => {\n    console.log(sku);\n    console.log(quantidade);\n    let indexOrcamento = getState().config.orcamentoAtivo;\n    let orcamento = getState().databank.orcamentosPrime[indexOrcamento];\n    let produtoIndex = orcamento.itens.findIndex(item => item.sku === sku);\n    orcamento.itens[produtoIndex].quantidade = quantidade;\n    dispatch(updateOrcamentoPrime(indexOrcamento, orcamento));\n    dispatch(SaveOrcamento());\n  };\n};\n_c = ChangeQuantidade;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeQuantidade\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/Itens/ChangeQuantidade.js"],"names":["updateOrcamentoPrime","SaveOrcamento","ChangeQuantidade","sku","quantidade","dispatch","getState","console","log","indexOrcamento","config","orcamentoAtivo","orcamento","databank","orcamentosPrime","produtoIndex","itens","findIndex","item"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,YAArC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACnD,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACA,QAAIK,cAAc,GAAGH,QAAQ,GAAGI,MAAX,CAAkBC,cAAvC;AACA,QAAIC,SAAS,GAAGN,QAAQ,GAAGO,QAAX,CAAoBC,eAApB,CAAoCL,cAApC,CAAhB;AACA,QAAIM,YAAY,GAAGH,SAAS,CAACI,KAAV,CAAgBC,SAAhB,CAA2BC,IAAD,IAAUA,IAAI,CAACf,GAAL,KAAaA,GAAjD,CAAnB;AAEAS,IAAAA,SAAS,CAACI,KAAV,CAAgBD,YAAhB,EAA8BX,UAA9B,GAA2CA,UAA3C;AAEAC,IAAAA,QAAQ,CAACL,oBAAoB,CAACS,cAAD,EAAiBG,SAAjB,CAArB,CAAR;AACAP,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD,GAXD;AAYD,CAbM;KAAMC,gB","sourcesContent":["import { updateOrcamentoPrime } from \"../Actions\";\r\nimport { SaveOrcamento } from \"../SaveOrcamento\";\r\n\r\nexport const ChangeQuantidade = (sku, quantidade) => {\r\n  return (dispatch, getState) => {\r\n    console.log(sku);\r\n    console.log(quantidade);\r\n    let indexOrcamento = getState().config.orcamentoAtivo;\r\n    let orcamento = getState().databank.orcamentosPrime[indexOrcamento];\r\n    let produtoIndex = orcamento.itens.findIndex((item) => item.sku === sku);\r\n\r\n    orcamento.itens[produtoIndex].quantidade = quantidade;\r\n\r\n    dispatch(updateOrcamentoPrime(indexOrcamento, orcamento));\r\n    dispatch(SaveOrcamento());\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}