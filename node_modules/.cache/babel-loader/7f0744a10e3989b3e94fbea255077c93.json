{"ast":null,"code":"import { changeItens, updateItem, updateOrcamentoPrime } from \"../Actions\";\nimport { SaveOrcamento } from \"../SaveOrcamento\";\nexport const ChangeSku = (index, sku) => {\n  return async (dispatch, getState) => {\n    sku = parseInt(sku);\n    let indexOrcamento = getState().config.orcamentoAtivo;\n    let orcamento = getState().databank.orcamentosPrime[indexOrcamento];\n    let produtos = getState().databank.produtos;\n    let item = produtos.find(produto => {\n      return produto.sku === sku;\n    });\n\n    if (item) {\n      orcamento.itens[index] = { ...item,\n        quantidade: item.multiplo\n      };\n      dispatch(updateItem(index, indexOrcamento, item));\n    } else {\n      orcamento.itens[index] = {\n        sku\n      };\n      dispatch(updateItem(index, indexOrcamento, {\n        sku\n      }));\n    } // dispatch(SaveOrcamento({ index: indexOrcamento }));\n\n  };\n}; // let produtos = getState().orcamentos.produtos;\n// if (sku && sku.toString().length > 5 && sku / 6000 > 1) {\n//   let r = produtos.find((produto) => {\n//     return produto.sku === parseInt(sku);\n//   });\n//   await dispatch(trocarItem(r, index, indexOrcamento));\n//   dispatch(saveOrcamento({ index: indexOrcamento }));\n// } else {\n//   await dispatch(\n//     ChangeItens(\n//       {\n//         sku,\n//         nome: \"\",\n//         valor: 0,\n//         valorReal: 0,\n//         quantidade: 0,\n//         preco: 0,\n//         multiplo: 0,\n//         caixaMaster: 0,\n//         estoque: \"\",\n//       },\n//       index,\n//       indexOrcamento\n//     )\n//   );\n//   dispatch(saveOrcamento({ index: indexOrcamento }));\n// }\n\n_c = ChangeSku;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeSku\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/TabelaActions/ChangeSku.js"],"names":["changeItens","updateItem","updateOrcamentoPrime","SaveOrcamento","ChangeSku","index","sku","dispatch","getState","parseInt","indexOrcamento","config","orcamentoAtivo","orcamento","databank","orcamentosPrime","produtos","item","find","produto","itens","quantidade","multiplo"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,oBAAlC,QAA8D,YAA9D;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCF,IAAAA,GAAG,GAAGG,QAAQ,CAACH,GAAD,CAAd;AACA,QAAII,cAAc,GAAGF,QAAQ,GAAGG,MAAX,CAAkBC,cAAvC;AACA,QAAIC,SAAS,GAAGL,QAAQ,GAAGM,QAAX,CAAoBC,eAApB,CAAoCL,cAApC,CAAhB;AACA,QAAIM,QAAQ,GAAGR,QAAQ,GAAGM,QAAX,CAAoBE,QAAnC;AACA,QAAIC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAeC,OAAD,IAAa;AACpC,aAAOA,OAAO,CAACb,GAAR,KAAgBA,GAAvB;AACD,KAFU,CAAX;;AAGA,QAAIW,IAAJ,EAAU;AACRJ,MAAAA,SAAS,CAACO,KAAV,CAAgBf,KAAhB,IAAyB,EAAE,GAAGY,IAAL;AAAWI,QAAAA,UAAU,EAAEJ,IAAI,CAACK;AAA5B,OAAzB;AACAf,MAAAA,QAAQ,CAACN,UAAU,CAACI,KAAD,EAAQK,cAAR,EAAwBO,IAAxB,CAAX,CAAR;AACD,KAHD,MAGO;AACLJ,MAAAA,SAAS,CAACO,KAAV,CAAgBf,KAAhB,IAAyB;AAAEC,QAAAA;AAAF,OAAzB;AACAC,MAAAA,QAAQ,CAACN,UAAU,CAACI,KAAD,EAAQK,cAAR,EAAwB;AAAEJ,QAAAA;AAAF,OAAxB,CAAX,CAAR;AACD,KAdkC,CAenC;;AACD,GAhBD;AAiBD,CAlBM,C,CAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA7CaF,S","sourcesContent":["import { changeItens, updateItem, updateOrcamentoPrime } from \"../Actions\";\r\nimport { SaveOrcamento } from \"../SaveOrcamento\";\r\n\r\nexport const ChangeSku = (index, sku) => {\r\n  return async (dispatch, getState) => {\r\n    sku = parseInt(sku);\r\n    let indexOrcamento = getState().config.orcamentoAtivo;\r\n    let orcamento = getState().databank.orcamentosPrime[indexOrcamento];\r\n    let produtos = getState().databank.produtos;\r\n    let item = produtos.find((produto) => {\r\n      return produto.sku === sku;\r\n    });\r\n    if (item) {\r\n      orcamento.itens[index] = { ...item, quantidade: item.multiplo };\r\n      dispatch(updateItem(index, indexOrcamento, item));\r\n    } else {\r\n      orcamento.itens[index] = { sku };\r\n      dispatch(updateItem(index, indexOrcamento, { sku }));\r\n    }\r\n    // dispatch(SaveOrcamento({ index: indexOrcamento }));\r\n  };\r\n};\r\n// let produtos = getState().orcamentos.produtos;\r\n// if (sku && sku.toString().length > 5 && sku / 6000 > 1) {\r\n//   let r = produtos.find((produto) => {\r\n//     return produto.sku === parseInt(sku);\r\n//   });\r\n//   await dispatch(trocarItem(r, index, indexOrcamento));\r\n//   dispatch(saveOrcamento({ index: indexOrcamento }));\r\n// } else {\r\n//   await dispatch(\r\n//     ChangeItens(\r\n//       {\r\n//         sku,\r\n//         nome: \"\",\r\n//         valor: 0,\r\n//         valorReal: 0,\r\n//         quantidade: 0,\r\n//         preco: 0,\r\n//         multiplo: 0,\r\n//         caixaMaster: 0,\r\n//         estoque: \"\",\r\n//       },\r\n//       index,\r\n//       indexOrcamento\r\n//     )\r\n//   );\r\n//   dispatch(saveOrcamento({ index: indexOrcamento }));\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}