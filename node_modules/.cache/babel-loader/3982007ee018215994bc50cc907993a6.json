{"ast":null,"code":"import { loading, savingOrcamento, toggleModal, toggleSaving, updateOrcamentos } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nimport { ChangePage } from \"./ChangePage\";\n\nvar crypto = require(\"crypto\");\n\nexport const SaveOrcamento = orcamento => {\n  return (dispatch, getState) => {\n    try {\n      let pedido = { ...orcamento\n      };\n      dispatch(toggleSaving(true));\n      let {\n        socket\n      } = getState().pages;\n      let {\n        salvos\n      } = getState().orcamentos;\n      let token = localStorage.getItem(\"token\");\n      let id;\n\n      if (Object.keys(orcamento)[[0]] === \"id\") {\n        orcamento = salvos.find(orc => {\n          return orc.id === orcamento.id;\n        });\n      } else if (Object.keys(orcamento)[[0]] === \"index\") {\n        orcamento = salvos[orcamento.index];\n      } else if (Object.keys(orcamento)[[0]] === \"titulo\") {\n        dispatch(loading(true));\n        id = crypto.randomBytes(20).toString(\"hex\").toUpperCase();\n        orcamento = {\n          id,\n          titulo: orcamento.titulo,\n          pagamentoAntecipado: false,\n          itens: [{\n            sku: 0\n          }],\n          criadoEm: new Date(),\n          ultimaModificacao: new Date()\n        };\n      }\n\n      let {\n        subTotal,\n        subTotalDisponivel,\n        total,\n        totalDisponivel,\n        ...rest\n      } = orcamento;\n      orcamento = { ...rest,\n        ultimaModificacao: new Date()\n      };\n      callBackend(socket, \"saveOrcamento\", token, { ...orcamento\n      }).then(async r => {\n        dispatch(savingOrcamento(false));\n        dispatch(loading(false));\n\n        if (Object.keys(pedido)[[0]] === \"titulo\") {\n          await dispatch(updateOrcamentos({\n            salvos: r.orcamentos\n          }));\n          await dispatch(updateOrcamentos({\n            atual: id\n          }));\n          await dispatch(ChangePage(\"orcamentoAtual\"));\n          await dispatch(toggleModal(\"criarOrcamento\", false));\n        }\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n_c = SaveOrcamento;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveOrcamento\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/SaveOrcamento.js"],"names":["loading","savingOrcamento","toggleModal","toggleSaving","updateOrcamentos","callBackend","ChangePage","crypto","require","SaveOrcamento","orcamento","dispatch","getState","pedido","socket","pages","salvos","orcamentos","token","localStorage","getItem","id","Object","keys","find","orc","index","randomBytes","toString","toUpperCase","titulo","pagamentoAntecipado","itens","sku","criadoEm","Date","ultimaModificacao","subTotal","subTotalDisponivel","total","totalDisponivel","rest","then","r","atual","e","console","log"],"mappings":"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","sourcesContent":["import {\r\n  loading,\r\n  savingOrcamento,\r\n  toggleModal,\r\n  toggleSaving,\r\n  updateOrcamentos,\r\n} from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\nimport { ChangePage } from \"./ChangePage\";\r\nvar crypto = require(\"crypto\");\r\n\r\nexport const SaveOrcamento = (orcamento) => {\r\n  return (dispatch, getState) => {\r\n    try {\r\n      let pedido = { ...orcamento };\r\n      dispatch(toggleSaving(true));\r\n      let { socket } = getState().pages;\r\n      let { salvos } = getState().orcamentos;\r\n      let token = localStorage.getItem(\"token\");\r\n      let id;\r\n      if (Object.keys(orcamento)[[0]] === \"id\") {\r\n        orcamento = salvos.find((orc) => {\r\n          return orc.id === orcamento.id;\r\n        });\r\n      } else if (Object.keys(orcamento)[[0]] === \"index\") {\r\n        orcamento = salvos[orcamento.index];\r\n      } else if (Object.keys(orcamento)[[0]] === \"titulo\") {\r\n        dispatch(loading(true));\r\n        id = crypto.randomBytes(20).toString(\"hex\").toUpperCase();\r\n        orcamento = {\r\n          id,\r\n          titulo: orcamento.titulo,\r\n          pagamentoAntecipado: false,\r\n          itens: [{ sku: 0 }],\r\n          criadoEm: new Date(),\r\n          ultimaModificacao: new Date(),\r\n        };\r\n      }\r\n      let { subTotal, subTotalDisponivel, total, totalDisponivel, ...rest } =\r\n        orcamento;\r\n      orcamento = { ...rest, ultimaModificacao: new Date() };\r\n      callBackend(socket, \"saveOrcamento\", token, { ...orcamento }).then(\r\n        async (r) => {\r\n          dispatch(savingOrcamento(false));\r\n          dispatch(loading(false));\r\n          if (Object.keys(pedido)[[0]] === \"titulo\") {\r\n            await dispatch(updateOrcamentos({ salvos: r.orcamentos }));\r\n            await dispatch(updateOrcamentos({ atual: id }));\r\n            await dispatch(ChangePage(\"orcamentoAtual\"));\r\n            await dispatch(toggleModal(\"criarOrcamento\", false));\r\n          }\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}