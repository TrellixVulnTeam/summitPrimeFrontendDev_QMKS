{"ast":null,"code":"import { changePage, loading, toggleModal, updateOrcamentos } from \"./Actions\";\nimport callAirtable from \"./CallAirtable\";\nimport callBackend from \"./CallBackend\";\nexport const GetOrcamentosVnda = (type, changePagee) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(loading(true));\n      let url;\n      let token = localStorage.getItem(\"token\");\n      let cnpj = getState().informacoes.cnpj;\n      let pedidos = await callAirtable(cnpj);\n      dispatch(updateOrcamentos({\n        [type]: pedidos\n      }));\n\n      if (changePagee) {\n        dispatch(changePage(\"orcamentosVnda\"));\n      }\n\n      dispatch(toggleModal(\"sidebar\", true));\n      dispatch(loading(false));\n      return Promise.resolve();\n\n      if (token) {\n        let r = await callBackend(url, token, {\n          cnpj\n        });\n        console.log(r);\n        await dispatch(updateOrcamentos({\n          [type]: r\n        }));\n        await dispatch(toggleModal(\"sidebar\", true));\n        await dispatch(loading(false));\n        return Promise.resolve();\n      }\n    } catch (e) {\n      console.log(\"erro no callBackend\");\n      dispatch(loading(false));\n      return Promise.resolve();\n    }\n  };\n};\n_c = GetOrcamentosVnda;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetOrcamentosVnda\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/GetOrcamentosVnda.js"],"names":["changePage","loading","toggleModal","updateOrcamentos","callAirtable","callBackend","GetOrcamentosVnda","type","changePagee","dispatch","getState","url","token","localStorage","getItem","cnpj","informacoes","pedidos","Promise","resolve","r","console","log","e"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,WAA9B,EAA2CC,gBAA3C,QAAmE,WAAnE;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB;AACtD,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAI;AACFD,MAAAA,QAAQ,CAACR,OAAO,CAAC,IAAD,CAAR,CAAR;AACA,UAAIU,GAAJ;AACA,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAIC,IAAI,GAAGL,QAAQ,GAAGM,WAAX,CAAuBD,IAAlC;AAEA,UAAIE,OAAO,GAAG,MAAMb,YAAY,CAACW,IAAD,CAAhC;AACAN,MAAAA,QAAQ,CAACN,gBAAgB,CAAC;AAAE,SAACI,IAAD,GAAQU;AAAV,OAAD,CAAjB,CAAR;;AACA,UAAIT,WAAJ,EAAiB;AACfC,QAAAA,QAAQ,CAACT,UAAU,CAAC,gBAAD,CAAX,CAAR;AACD;;AACDS,MAAAA,QAAQ,CAACP,WAAW,CAAC,SAAD,EAAY,IAAZ,CAAZ,CAAR;AACAO,MAAAA,QAAQ,CAACR,OAAO,CAAC,KAAD,CAAR,CAAR;AACA,aAAOiB,OAAO,CAACC,OAAR,EAAP;;AAEA,UAAIP,KAAJ,EAAW;AACT,YAAIQ,CAAC,GAAG,MAAMf,WAAW,CAACM,GAAD,EAAMC,KAAN,EAAa;AAAEG,UAAAA;AAAF,SAAb,CAAzB;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,cAAMX,QAAQ,CAACN,gBAAgB,CAAC;AAAE,WAACI,IAAD,GAAQa;AAAV,SAAD,CAAjB,CAAd;AACA,cAAMX,QAAQ,CAACP,WAAW,CAAC,SAAD,EAAY,IAAZ,CAAZ,CAAd;AACA,cAAMO,QAAQ,CAACR,OAAO,CAAC,KAAD,CAAR,CAAd;AACA,eAAOiB,OAAO,CAACC,OAAR,EAAP;AACD;AACF,KAvBD,CAuBE,OAAOI,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAb,MAAAA,QAAQ,CAACR,OAAO,CAAC,KAAD,CAAR,CAAR;AACA,aAAOiB,OAAO,CAACC,OAAR,EAAP;AACD;AACF,GA7BD;AA8BD,CA/BM;KAAMb,iB","sourcesContent":["import { changePage, loading, toggleModal, updateOrcamentos } from \"./Actions\";\r\nimport callAirtable from \"./CallAirtable\";\r\nimport callBackend from \"./CallBackend\";\r\n\r\nexport const GetOrcamentosVnda = (type, changePagee) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch(loading(true));\r\n      let url;\r\n      let token = localStorage.getItem(\"token\");\r\n      let cnpj = getState().informacoes.cnpj;\r\n\r\n      let pedidos = await callAirtable(cnpj);\r\n      dispatch(updateOrcamentos({ [type]: pedidos }));\r\n      if (changePagee) {\r\n        dispatch(changePage(\"orcamentosVnda\"));\r\n      }\r\n      dispatch(toggleModal(\"sidebar\", true));\r\n      dispatch(loading(false));\r\n      return Promise.resolve();\r\n\r\n      if (token) {\r\n        let r = await callBackend(url, token, { cnpj });\r\n        console.log(r);\r\n        await dispatch(updateOrcamentos({ [type]: r }));\r\n        await dispatch(toggleModal(\"sidebar\", true));\r\n        await dispatch(loading(false));\r\n        return Promise.resolve();\r\n      }\r\n    } catch (e) {\r\n      console.log(\"erro no callBackend\");\r\n      dispatch(loading(false));\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}