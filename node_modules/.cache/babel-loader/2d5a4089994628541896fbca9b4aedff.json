{"ast":null,"code":"import { updatePrecos } from \"../Actions\";\nexport const calcularValores = () => {\n  return (dispatch, getState) => {\n    let informacoes = getState().informacoes;\n    let orcamentoAtual = getState().orcamentos.atual;\n    let orcamentoAtivo = getState().orcamentos.salvos.find(orcamento => orcamento.id === orcamentoAtual);\n    orcamentoAtivo.total = 0;\n    orcamentoAtivo.totalDisponivel = 0;\n\n    for (let i = 0; i < orcamentoAtivo.itens.length; i++) {\n      let item = orcamentoAtivo.itens[i];\n      item.valorReal = item.valor;\n\n      if (item.marca !== \"ARTOOLS\") {\n        let desconto = (100 - informacoes.desconto) / 100;\n        item.valorReal *= desconto;\n\n        if (item.quantidade % item.caixaMaster === 0) {\n          item.valorReal *= 0.95;\n        }\n      }\n\n      item.valorReal *= item.imposto;\n      item.preco = item.valorReal * item.quantidade;\n\n      if (item.preco) {\n        orcamentoAtivo.total += item.preco;\n\n        if (item.estoque > 0) {\n          orcamentoAtivo.totalDisponivel += item.preco;\n        }\n      }\n    }\n\n    orcamentoAtivo.subTotal = orcamentoAtivo.total;\n\n    if (orcamentoAtivo.pagamentoAntecipado) {\n      orcamentoAtivo.total = orcamentoAtivo.total * 0.945;\n      orcamentoAtivo.totalDisponivel = orcamentoAtivo.totalDisponivel * 0.945;\n    }\n\n    let orcamentoAtivoIndex = getState().orcamentos.salvos.findIndex(orcamento => orcamento.id === getState().orcamentos.atual);\n    dispatch(updatePrecos(orcamentoAtivoIndex, orcamentoAtivo));\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/TabelaActions/CalcularValores.js"],"names":["updatePrecos","calcularValores","dispatch","getState","informacoes","orcamentoAtual","orcamentos","atual","orcamentoAtivo","salvos","find","orcamento","id","total","totalDisponivel","i","itens","length","item","valorReal","valor","marca","desconto","quantidade","caixaMaster","imposto","preco","estoque","subTotal","pagamentoAntecipado","orcamentoAtivoIndex","findIndex"],"mappings":"AAAA,SAASA,YAAT,QAA6B,YAA7B;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAIC,WAAW,GAAGD,QAAQ,GAAGC,WAA7B;AACA,QAAIC,cAAc,GAAGF,QAAQ,GAAGG,UAAX,CAAsBC,KAA3C;AACA,QAAIC,cAAc,GAAGL,QAAQ,GAAGG,UAAX,CAAsBG,MAAtB,CAA6BC,IAA7B,CAClBC,SAAD,IAAeA,SAAS,CAACC,EAAV,KAAiBP,cADb,CAArB;AAIAG,IAAAA,cAAc,CAACK,KAAf,GAAuB,CAAvB;AACAL,IAAAA,cAAc,CAACM,eAAf,GAAiC,CAAjC;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,cAAc,CAACQ,KAAf,CAAqBC,MAAzC,EAAiDF,CAAC,EAAlD,EAAsD;AACpD,UAAIG,IAAI,GAAGV,cAAc,CAACQ,KAAf,CAAqBD,CAArB,CAAX;AAEAG,MAAAA,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACE,KAAtB;;AAEA,UAAIF,IAAI,CAACG,KAAL,KAAe,SAAnB,EAA8B;AAC5B,YAAIC,QAAQ,GAAG,CAAC,MAAMlB,WAAW,CAACkB,QAAnB,IAA+B,GAA9C;AACAJ,QAAAA,IAAI,CAACC,SAAL,IAAkBG,QAAlB;;AAEA,YAAIJ,IAAI,CAACK,UAAL,GAAkBL,IAAI,CAACM,WAAvB,KAAuC,CAA3C,EAA8C;AAC5CN,UAAAA,IAAI,CAACC,SAAL,IAAkB,IAAlB;AACD;AACF;;AACDD,MAAAA,IAAI,CAACC,SAAL,IAAkBD,IAAI,CAACO,OAAvB;AACAP,MAAAA,IAAI,CAACQ,KAAL,GAAaR,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACK,UAAnC;;AAEA,UAAIL,IAAI,CAACQ,KAAT,EAAgB;AACdlB,QAAAA,cAAc,CAACK,KAAf,IAAwBK,IAAI,CAACQ,KAA7B;;AACA,YAAIR,IAAI,CAACS,OAAL,GAAe,CAAnB,EAAsB;AACpBnB,UAAAA,cAAc,CAACM,eAAf,IAAkCI,IAAI,CAACQ,KAAvC;AACD;AACF;AACF;;AAEDlB,IAAAA,cAAc,CAACoB,QAAf,GAA0BpB,cAAc,CAACK,KAAzC;;AAEA,QAAIL,cAAc,CAACqB,mBAAnB,EAAwC;AACtCrB,MAAAA,cAAc,CAACK,KAAf,GAAuBL,cAAc,CAACK,KAAf,GAAuB,KAA9C;AACAL,MAAAA,cAAc,CAACM,eAAf,GAAiCN,cAAc,CAACM,eAAf,GAAiC,KAAlE;AACD;;AAED,QAAIgB,mBAAmB,GAAG3B,QAAQ,GAAGG,UAAX,CAAsBG,MAAtB,CAA6BsB,SAA7B,CACvBpB,SAAD,IAAeA,SAAS,CAACC,EAAV,KAAiBT,QAAQ,GAAGG,UAAX,CAAsBC,KAD9B,CAA1B;AAIAL,IAAAA,QAAQ,CAACF,YAAY,CAAC8B,mBAAD,EAAsBtB,cAAtB,CAAb,CAAR;AACD,GA9CD;AA+CD,CAhDM","sourcesContent":["import { updatePrecos } from \"../Actions\";\r\n\r\nexport const calcularValores = () => {\r\n  return (dispatch, getState) => {\r\n    let informacoes = getState().informacoes;\r\n    let orcamentoAtual = getState().orcamentos.atual;\r\n    let orcamentoAtivo = getState().orcamentos.salvos.find(\r\n      (orcamento) => orcamento.id === orcamentoAtual\r\n    );\r\n\r\n    orcamentoAtivo.total = 0;\r\n    orcamentoAtivo.totalDisponivel = 0;\r\n\r\n    for (let i = 0; i < orcamentoAtivo.itens.length; i++) {\r\n      let item = orcamentoAtivo.itens[i];\r\n\r\n      item.valorReal = item.valor;\r\n\r\n      if (item.marca !== \"ARTOOLS\") {\r\n        let desconto = (100 - informacoes.desconto) / 100;\r\n        item.valorReal *= desconto;\r\n\r\n        if (item.quantidade % item.caixaMaster === 0) {\r\n          item.valorReal *= 0.95;\r\n        }\r\n      }\r\n      item.valorReal *= item.imposto;\r\n      item.preco = item.valorReal * item.quantidade;\r\n\r\n      if (item.preco) {\r\n        orcamentoAtivo.total += item.preco;\r\n        if (item.estoque > 0) {\r\n          orcamentoAtivo.totalDisponivel += item.preco;\r\n        }\r\n      }\r\n    }\r\n\r\n    orcamentoAtivo.subTotal = orcamentoAtivo.total;\r\n\r\n    if (orcamentoAtivo.pagamentoAntecipado) {\r\n      orcamentoAtivo.total = orcamentoAtivo.total * 0.945;\r\n      orcamentoAtivo.totalDisponivel = orcamentoAtivo.totalDisponivel * 0.945;\r\n    }\r\n\r\n    let orcamentoAtivoIndex = getState().orcamentos.salvos.findIndex(\r\n      (orcamento) => orcamento.id === getState().orcamentos.atual\r\n    );\r\n\r\n    dispatch(updatePrecos(orcamentoAtivoIndex, orcamentoAtivo));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}