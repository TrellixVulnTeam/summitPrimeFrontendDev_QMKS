{"ast":null,"code":"import { loading, updateClientesGoldData } from \"../Actions\";\nexport const CalculateClientesGold = () => {\n  return async (dispatch, getState) => {\n    try {\n      let data = [];\n      let dataCrua = getState().clientesGold.dataCrua;\n\n      for (let i = 1; i < dataCrua.length; i++) {\n        const element = dataCrua[i];\n        data.push({\n          date: parseFloat(element[0]),\n          pagador: parseFloat(element[1]),\n          material: parseFloat(element[2]),\n          valor: parseFloat(element[3])\n        });\n      }\n\n      let headers = getState().clientesGold.headers;\n      let {\n        skuMes,\n        valorAno,\n        skuAno,\n        valorMes,\n        vezesAno\n      } = headers;\n      let pedidos = {};\n\n      for (let i = 0; i < data.length; i++) {\n        const pedido = data[i];\n\n        if (pedido.date !== 0) {\n          pedido.valor = parseFloat(pedido.valor.toFixed(2));\n\n          if (!pedidos[pedido.date]) {\n            pedidos[pedido.date] = {};\n          }\n\n          if (!pedidos[pedido.date][pedido.pagador]) {\n            pedidos[pedido.date][pedido.pagador] = [];\n          }\n\n          let indx = pedidos[pedido.date][pedido.pagador].findIndex(element => {\n            return element.sku === pedido.material;\n          });\n\n          if (indx !== -1) {\n            pedidos[pedido.date][pedido.pagador][indx].valor += pedido.valor;\n          } else {\n            pedidos[pedido.date][pedido.pagador].push({\n              sku: pedido.material,\n              valor: parseFloat(pedido.valor.toFixed(2))\n            });\n          }\n        }\n      }\n\n      let mesesKeys = Object.keys(pedidos);\n      let dataToSend = {};\n\n      for (let i = 0; i < mesesKeys.length; i++) {\n        const mesAtual = mesesKeys[i];\n        dataToSend[mesAtual] = {\n          valorAno: {},\n          valorMes: {},\n          skuAno: {},\n          skuMes: {},\n          vezesAno: {},\n          golds: []\n        };\n        let clientesPorAno = {};\n\n        for (let j = i; j > -1 && i - j <= 12; j--) {\n          let mesKey = mesesKeys[j];\n          let mes = pedidos[mesKey];\n          let clientesKeys = Object.keys(mes);\n\n          for (let k = 0; k < clientesKeys.length; k++) {\n            let clienteKey = clientesKeys[k];\n            let cliente = mes[clienteKey];\n\n            if (pedidos[\"2006\"][\"69539\"][0].valor !== 22.63) {\n              console.log(\"ERRO CRASSO\");\n              process.exit();\n            }\n\n            if (j === i) {\n              // ------------------------------------skuMes-----------------------------\n              if (cliente.length > skuMes) {\n                if (!dataToSend[mesKey][\"skuMes\"][clienteKey]) {\n                  dataToSend[mesKey][\"skuMes\"][clienteKey] = [];\n                }\n\n                dataToSend[mesKey][\"skuMes\"][clienteKey].push(...cliente);\n              } // --------------------------------------valorMes----------------------------\n\n\n              let valorDoMes = 0;\n\n              for (let l = 0; l < cliente.length; l++) {\n                const products = cliente[l];\n                valorDoMes += products.valor;\n              }\n\n              if (valorDoMes > valorMes) {\n                if (!dataToSend[mesKey][\"valorMes\"][clienteKey]) {\n                  dataToSend[mesKey][\"valorMes\"][clienteKey] = [];\n                }\n\n                dataToSend[mesKey][\"valorMes\"][clienteKey].push(...cliente);\n              }\n            } else {\n              // ---------------------------------------clientesPorAno----------------------------\n              if (!clientesPorAno[clienteKey]) {\n                clientesPorAno[clienteKey] = {\n                  itens: [],\n                  vezesNoAno: 0\n                };\n              }\n\n              clientesPorAno[clienteKey][\"vezesNoAno\"] += 1;\n\n              for (let l = 0; l < cliente.length; l++) {\n                const itemm = cliente[l];\n                let indexclientesPorAno = clientesPorAno[clienteKey][\"itens\"].findIndex(element => {\n                  return element.sku === itemm.sku;\n                });\n\n                if (indexclientesPorAno === -1) {\n                  clientesPorAno[clienteKey][\"itens\"].push({ ...itemm\n                  });\n                } else {\n                  clientesPorAno[clienteKey][\"itens\"][l].valor += parseFloat(itemm.valor.toFixed(2));\n                }\n              }\n            }\n          }\n\n          let clientesPorAnoKeys = Object.keys(clientesPorAno);\n\n          for (let l = 0; l < clientesPorAnoKeys.length; l++) {\n            const clientesPorAnoKey = clientesPorAnoKeys[l];\n            const clientePorAno = clientesPorAno[clientesPorAnoKey]; // ---------------------------------------SkuAno----------------------------\n\n            if (clientePorAno[\"itens\"].length > skuAno) {\n              if (!dataToSend[mesAtual][\"skuAno\"][clientesPorAnoKey]) {\n                dataToSend[mesAtual][\"skuAno\"][clientesPorAnoKey] = [];\n              }\n\n              dataToSend[mesAtual][\"skuAno\"][clientesPorAnoKey].push(...clientePorAno[\"itens\"]);\n            } // ---------------------------------------valorAno----------------------------\n\n\n            let valorDoAno = 0;\n\n            for (let m = 0; m < clientePorAno[\"itens\"].length; m++) {\n              const products = clientePorAno[\"itens\"][m];\n              valorDoAno += products.valor;\n            }\n\n            if (valorDoAno > valorAno) {\n              if (!dataToSend[mesAtual][\"valorAno\"][clientesPorAnoKey]) {\n                dataToSend[mesAtual][\"valorAno\"][clientesPorAnoKey] = [];\n              }\n\n              dataToSend[mesAtual][\"valorAno\"][clientesPorAnoKey].push(...clientePorAno[\"itens\"]);\n            } // ---------------------------------------vezesAno----------------------------\n\n\n            if (clientePorAno[\"vezesNoAno\"] >= vezesAno) {\n              if (!dataToSend[mesAtual][\"vezesAno\"][clientesPorAnoKey]) {\n                dataToSend[mesAtual][\"vezesAno\"][clientesPorAnoKey] = [];\n              }\n\n              dataToSend[mesAtual][\"vezesAno\"][clientesPorAnoKey].push(...clientePorAno[\"itens\"]);\n            }\n          }\n        }\n\n        let dataToSendKeys = Object.keys(dataToSend[mesAtual]);\n\n        for (let m = 0; m < dataToSendKeys.length - 1; m++) {\n          const dataToSendKey = dataToSendKeys[m];\n          const dataToSendClienteKeys = Object.keys(dataToSend[mesAtual][dataToSendKey]);\n\n          for (let n = 0; n < dataToSendClienteKeys.length; n++) {\n            const dataToSendClienteKey = dataToSendClienteKeys[n];\n            const dataToSendCliente = dataToSend[mesAtual][dataToSendKey][dataToSendClienteKey];\n            let dataToSendClienteIndex = dataToSend[mesAtual][\"golds\"].findIndex(element => {\n              return element.codigo === dataToSendClienteKey;\n            }); // console.log(dataToSendClienteIndex);\n\n            if (!dataToSendClienteIndex === -1) {\n              dataToSend[mesAtual][\"golds\"][\"itens\"].push(...dataToSendCliente);\n            } else {\n              dataToSend[mesAtual][\"golds\"].push({\n                codigo: dataToSendClienteKey,\n                itens: dataToSendCliente,\n                isFaturado: false\n              });\n              let dataToSendClienteIndexx = dataToSend[mesAtual][\"golds\"].findIndex(element => {\n                return element.codigo === dataToSendClienteKey;\n              });\n\n              if (pedidos[mesAtual][dataToSendClienteKey]) {\n                dataToSend[mesAtual][\"golds\"][dataToSendClienteIndexx][\"isFaturado\"] = true;\n              }\n            }\n          }\n        }\n      }\n\n      await dispatch(updateClientesGoldData(dataToSend));\n    } catch (e) {\n      console.log(\"erro no callBackend\");\n      dispatch(loading(false));\n      return Promise.resolve();\n    }\n  };\n};\n_c = CalculateClientesGold;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateClientesGold\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/ClientesGold/CalculateClientesGold.js"],"names":["loading","updateClientesGoldData","CalculateClientesGold","dispatch","getState","data","dataCrua","clientesGold","i","length","element","push","date","parseFloat","pagador","material","valor","headers","skuMes","valorAno","skuAno","valorMes","vezesAno","pedidos","pedido","toFixed","indx","findIndex","sku","mesesKeys","Object","keys","dataToSend","mesAtual","golds","clientesPorAno","j","mesKey","mes","clientesKeys","k","clienteKey","cliente","console","log","process","exit","valorDoMes","l","products","itens","vezesNoAno","itemm","indexclientesPorAno","clientesPorAnoKeys","clientesPorAnoKey","clientePorAno","valorDoAno","m","dataToSendKeys","dataToSendKey","dataToSendClienteKeys","n","dataToSendClienteKey","dataToSendCliente","dataToSendClienteIndex","codigo","isFaturado","dataToSendClienteIndexx","e","Promise","resolve"],"mappings":"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","sourcesContent":["import { loading, updateClientesGoldData } from \"../Actions\";\r\n\r\nexport const CalculateClientesGold = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let data = [];\r\n      let dataCrua = getState().clientesGold.dataCrua;\r\n      for (let i = 1; i < dataCrua.length; i++) {\r\n        const element = dataCrua[i];\r\n\r\n        data.push({\r\n          date: parseFloat(element[0]),\r\n          pagador: parseFloat(element[1]),\r\n          material: parseFloat(element[2]),\r\n          valor: parseFloat(element[3]),\r\n        });\r\n      }\r\n      let headers = getState().clientesGold.headers;\r\n      let { skuMes, valorAno, skuAno, valorMes, vezesAno } = headers;\r\n      let pedidos = {};\r\n      for (let i = 0; i < data.length; i++) {\r\n        const pedido = data[i];\r\n        if (pedido.date !== 0) {\r\n          pedido.valor = parseFloat(pedido.valor.toFixed(2));\r\n          if (!pedidos[pedido.date]) {\r\n            pedidos[pedido.date] = {};\r\n          }\r\n          if (!pedidos[pedido.date][pedido.pagador]) {\r\n            pedidos[pedido.date][pedido.pagador] = [];\r\n          }\r\n          let indx = pedidos[pedido.date][pedido.pagador].findIndex(\r\n            (element) => {\r\n              return element.sku === pedido.material;\r\n            }\r\n          );\r\n          if (indx !== -1) {\r\n            pedidos[pedido.date][pedido.pagador][indx].valor += pedido.valor;\r\n          } else {\r\n            pedidos[pedido.date][pedido.pagador].push({\r\n              sku: pedido.material,\r\n              valor: parseFloat(pedido.valor.toFixed(2)),\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      let mesesKeys = Object.keys(pedidos);\r\n      let dataToSend = {};\r\n\r\n      for (let i = 0; i < mesesKeys.length; i++) {\r\n        const mesAtual = mesesKeys[i];\r\n        dataToSend[mesAtual] = {\r\n          valorAno: {},\r\n          valorMes: {},\r\n          skuAno: {},\r\n          skuMes: {},\r\n          vezesAno: {},\r\n          golds: [],\r\n        };\r\n\r\n        let clientesPorAno = {};\r\n        for (let j = i; j > -1 && i - j <= 12; j--) {\r\n          let mesKey = mesesKeys[j];\r\n          let mes = pedidos[mesKey];\r\n\r\n          let clientesKeys = Object.keys(mes);\r\n          for (let k = 0; k < clientesKeys.length; k++) {\r\n            let clienteKey = clientesKeys[k];\r\n            let cliente = mes[clienteKey];\r\n            if (pedidos[\"2006\"][\"69539\"][0].valor !== 22.63) {\r\n              console.log(\"ERRO CRASSO\");\r\n              process.exit();\r\n            }\r\n            if (j === i) {\r\n              // ------------------------------------skuMes-----------------------------\r\n              if (cliente.length > skuMes) {\r\n                if (!dataToSend[mesKey][\"skuMes\"][clienteKey]) {\r\n                  dataToSend[mesKey][\"skuMes\"][clienteKey] = [];\r\n                }\r\n                dataToSend[mesKey][\"skuMes\"][clienteKey].push(...cliente);\r\n              }\r\n              // --------------------------------------valorMes----------------------------\r\n              let valorDoMes = 0;\r\n              for (let l = 0; l < cliente.length; l++) {\r\n                const products = cliente[l];\r\n                valorDoMes += products.valor;\r\n              }\r\n              if (valorDoMes > valorMes) {\r\n                if (!dataToSend[mesKey][\"valorMes\"][clienteKey]) {\r\n                  dataToSend[mesKey][\"valorMes\"][clienteKey] = [];\r\n                }\r\n                dataToSend[mesKey][\"valorMes\"][clienteKey].push(...cliente);\r\n              }\r\n            } else {\r\n              // ---------------------------------------clientesPorAno----------------------------\r\n              if (!clientesPorAno[clienteKey]) {\r\n                clientesPorAno[clienteKey] = {\r\n                  itens: [],\r\n                  vezesNoAno: 0,\r\n                };\r\n              }\r\n              clientesPorAno[clienteKey][\"vezesNoAno\"] += 1;\r\n              for (let l = 0; l < cliente.length; l++) {\r\n                const itemm = cliente[l];\r\n                let indexclientesPorAno = clientesPorAno[clienteKey][\r\n                  \"itens\"\r\n                ].findIndex((element) => {\r\n                  return element.sku === itemm.sku;\r\n                });\r\n                if (indexclientesPorAno === -1) {\r\n                  clientesPorAno[clienteKey][\"itens\"].push({ ...itemm });\r\n                } else {\r\n                  clientesPorAno[clienteKey][\"itens\"][l].valor += parseFloat(\r\n                    itemm.valor.toFixed(2)\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          }\r\n          let clientesPorAnoKeys = Object.keys(clientesPorAno);\r\n          for (let l = 0; l < clientesPorAnoKeys.length; l++) {\r\n            const clientesPorAnoKey = clientesPorAnoKeys[l];\r\n            const clientePorAno = clientesPorAno[clientesPorAnoKey];\r\n            // ---------------------------------------SkuAno----------------------------\r\n            if (clientePorAno[\"itens\"].length > skuAno) {\r\n              if (!dataToSend[mesAtual][\"skuAno\"][clientesPorAnoKey]) {\r\n                dataToSend[mesAtual][\"skuAno\"][clientesPorAnoKey] = [];\r\n              }\r\n              dataToSend[mesAtual][\"skuAno\"][clientesPorAnoKey].push(\r\n                ...clientePorAno[\"itens\"]\r\n              );\r\n            }\r\n            // ---------------------------------------valorAno----------------------------\r\n            let valorDoAno = 0;\r\n            for (let m = 0; m < clientePorAno[\"itens\"].length; m++) {\r\n              const products = clientePorAno[\"itens\"][m];\r\n              valorDoAno += products.valor;\r\n            }\r\n            if (valorDoAno > valorAno) {\r\n              if (!dataToSend[mesAtual][\"valorAno\"][clientesPorAnoKey]) {\r\n                dataToSend[mesAtual][\"valorAno\"][clientesPorAnoKey] = [];\r\n              }\r\n              dataToSend[mesAtual][\"valorAno\"][clientesPorAnoKey].push(\r\n                ...clientePorAno[\"itens\"]\r\n              );\r\n            }\r\n            // ---------------------------------------vezesAno----------------------------\r\n            if (clientePorAno[\"vezesNoAno\"] >= vezesAno) {\r\n              if (!dataToSend[mesAtual][\"vezesAno\"][clientesPorAnoKey]) {\r\n                dataToSend[mesAtual][\"vezesAno\"][clientesPorAnoKey] = [];\r\n              }\r\n              dataToSend[mesAtual][\"vezesAno\"][clientesPorAnoKey].push(\r\n                ...clientePorAno[\"itens\"]\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        let dataToSendKeys = Object.keys(dataToSend[mesAtual]);\r\n\r\n        for (let m = 0; m < dataToSendKeys.length - 1; m++) {\r\n          const dataToSendKey = dataToSendKeys[m];\r\n\r\n          const dataToSendClienteKeys = Object.keys(\r\n            dataToSend[mesAtual][dataToSendKey]\r\n          );\r\n          for (let n = 0; n < dataToSendClienteKeys.length; n++) {\r\n            const dataToSendClienteKey = dataToSendClienteKeys[n];\r\n            const dataToSendCliente =\r\n              dataToSend[mesAtual][dataToSendKey][dataToSendClienteKey];\r\n\r\n            let dataToSendClienteIndex = dataToSend[mesAtual][\r\n              \"golds\"\r\n            ].findIndex((element) => {\r\n              return element.codigo === dataToSendClienteKey;\r\n            });\r\n\r\n            // console.log(dataToSendClienteIndex);\r\n\r\n            if (!dataToSendClienteIndex === -1) {\r\n              dataToSend[mesAtual][\"golds\"][\"itens\"].push(...dataToSendCliente);\r\n            } else {\r\n              dataToSend[mesAtual][\"golds\"].push({\r\n                codigo: dataToSendClienteKey,\r\n                itens: dataToSendCliente,\r\n                isFaturado: false,\r\n              });\r\n              let dataToSendClienteIndexx = dataToSend[mesAtual][\r\n                \"golds\"\r\n              ].findIndex((element) => {\r\n                return element.codigo === dataToSendClienteKey;\r\n              });\r\n              if (pedidos[mesAtual][dataToSendClienteKey]) {\r\n                dataToSend[mesAtual][\"golds\"][dataToSendClienteIndexx][\r\n                  \"isFaturado\"\r\n                ] = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      await dispatch(updateClientesGoldData(dataToSend));\r\n    } catch (e) {\r\n      console.log(\"erro no callBackend\");\r\n      dispatch(loading(false));\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}