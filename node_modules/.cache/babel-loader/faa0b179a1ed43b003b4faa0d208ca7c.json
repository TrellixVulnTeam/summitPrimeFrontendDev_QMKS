{"ast":null,"code":"import { trocarItem } from \"../Actions\";\nimport callBackend from \"../CallBackend\";\nimport { calcularValores } from \"./CalcularValores\";\nexport const ChangeProduto = (index, indexOrcamento, sku) => {\n  let token = localStorage.getItem(\"token\");\n  return async (dispatch, getState) => {\n    let produtos = getState().orcamentos.produtos;\n\n    if (sku && sku.toString().length > 5 && sku / 6000 > 1) {\n      let r = produtos.find(produto => {\n        return produto === sku;\n      });\n      console.log(r);\n      await dispatch(trocarItem(r, index, indexOrcamento));\n    } else {\n      await dispatch(trocarItem({\n        sku,\n        nome: \"\",\n        valor: 0,\n        valorReal: 0,\n        quantidade: 0,\n        preco: 0,\n        multiplo: 0,\n        caixaMaster: 0,\n        estoque: \"\"\n      }, index, indexOrcamento));\n      await dispatch(calcularValores());\n    }\n  };\n};\n_c = ChangeProduto;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeProduto\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/TabelaActions/ChangeProduto.js"],"names":["trocarItem","callBackend","calcularValores","ChangeProduto","index","indexOrcamento","sku","token","localStorage","getItem","dispatch","getState","produtos","orcamentos","toString","length","r","find","produto","console","log","nome","valor","valorReal","quantidade","preco","multiplo","caixaMaster","estoque"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,cAAR,EAAwBC,GAAxB,KAAgC;AAC3D,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAIC,QAAQ,GAAGD,QAAQ,GAAGE,UAAX,CAAsBD,QAArC;;AACA,QAAIN,GAAG,IAAIA,GAAG,CAACQ,QAAJ,GAAeC,MAAf,GAAwB,CAA/B,IAAoCT,GAAG,GAAG,IAAN,GAAa,CAArD,EAAwD;AACtD,UAAIU,CAAC,GAAGJ,QAAQ,CAACK,IAAT,CAAeC,OAAD,IAAa;AACjC,eAAOA,OAAO,KAAKZ,GAAnB;AACD,OAFO,CAAR;AAGAa,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AAEA,YAAMN,QAAQ,CAACV,UAAU,CAACgB,CAAD,EAAIZ,KAAJ,EAAWC,cAAX,CAAX,CAAd;AACD,KAPD,MAOO;AACL,YAAMK,QAAQ,CACZV,UAAU,CACR;AACEM,QAAAA,GADF;AAEEe,QAAAA,IAAI,EAAE,EAFR;AAGEC,QAAAA,KAAK,EAAE,CAHT;AAIEC,QAAAA,SAAS,EAAE,CAJb;AAKEC,QAAAA,UAAU,EAAE,CALd;AAMEC,QAAAA,KAAK,EAAE,CANT;AAOEC,QAAAA,QAAQ,EAAE,CAPZ;AAQEC,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,OAAO,EAAE;AATX,OADQ,EAYRxB,KAZQ,EAaRC,cAbQ,CADE,CAAd;AAiBA,YAAMK,QAAQ,CAACR,eAAe,EAAhB,CAAd;AACD;AACF,GA7BD;AA8BD,CAhCM;KAAMC,a","sourcesContent":["import { trocarItem } from \"../Actions\";\r\nimport callBackend from \"../CallBackend\";\r\nimport { calcularValores } from \"./CalcularValores\";\r\n\r\nexport const ChangeProduto = (index, indexOrcamento, sku) => {\r\n  let token = localStorage.getItem(\"token\");\r\n  return async (dispatch, getState) => {\r\n    let produtos = getState().orcamentos.produtos;\r\n    if (sku && sku.toString().length > 5 && sku / 6000 > 1) {\r\n      let r = produtos.find((produto) => {\r\n        return produto === sku;\r\n      });\r\n      console.log(r);\r\n\r\n      await dispatch(trocarItem(r, index, indexOrcamento));\r\n    } else {\r\n      await dispatch(\r\n        trocarItem(\r\n          {\r\n            sku,\r\n            nome: \"\",\r\n            valor: 0,\r\n            valorReal: 0,\r\n            quantidade: 0,\r\n            preco: 0,\r\n            multiplo: 0,\r\n            caixaMaster: 0,\r\n            estoque: \"\",\r\n          },\r\n          index,\r\n          indexOrcamento\r\n        )\r\n      );\r\n      await dispatch(calcularValores());\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}