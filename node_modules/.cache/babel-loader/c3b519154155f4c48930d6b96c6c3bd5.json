{"ast":null,"code":"var Airtable = require(\"airtable\");\n\nvar base = new Airtable({\n  apiKey: \"keysF3r1wa1KybX8y\"\n}).base(\"appqHN4JFZxWxuR4R\");\n\nconst callAirtable = cnpj => {\n  return new Promise((resolve, reject) => {\n    let str = cnpj.toString();\n    let CNPJ = str.slice(0, 2) + \".\" + str.slice(2, 5) + \".\" + str.slice(5, 8) + \"/\" + str.slice(8, 12) + \"-\" + str.slice(12, 14);\n    let pedidos = [];\n    base(\"Pedidos\").select({\n      filterByFormula: `({CNPJ} = '${CNPJ}')`\n    }).eachPage(function page(records, fetchNextPage) {\n      records.forEach(function (record) {\n        pedidos.push(record.fields);\n      });\n      fetchNextPage();\n    }, function done(err) {\n      if (err) {\n        reject(err);\n      }\n\n      resolve(pedidos);\n    });\n  });\n};\n\nexport default callAirtable;","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/Utils/CallAirtable.js"],"names":["Airtable","require","base","apiKey","callAirtable","cnpj","Promise","resolve","reject","str","toString","CNPJ","slice","pedidos","select","filterByFormula","eachPage","page","records","fetchNextPage","forEach","record","push","fields","done","err"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,IAAI,GAAG,IAAIF,QAAJ,CAAa;AAAEG,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CACT,mBADS,CAAX;;AAIA,MAAME,YAAY,GAAIC,IAAD,IAAU;AAC7B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,GAAG,GAAGJ,IAAI,CAACK,QAAL,EAAV;AACA,QAAIC,IAAI,GACNF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAa,CAAb,IACA,GADA,GAEAH,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAa,CAAb,CAFA,GAGA,GAHA,GAIAH,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAa,CAAb,CAJA,GAKA,GALA,GAMAH,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAa,EAAb,CANA,GAOA,GAPA,GAQAH,GAAG,CAACG,KAAJ,CAAU,EAAV,EAAc,EAAd,CATF;AAUA,QAAIC,OAAO,GAAG,EAAd;AACAX,IAAAA,IAAI,CAAC,SAAD,CAAJ,CACGY,MADH,CACU;AACNC,MAAAA,eAAe,EAAG,cAAaJ,IAAK;AAD9B,KADV,EAIGK,QAJH,CAKI,SAASC,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;AACpCD,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAChCR,QAAAA,OAAO,CAACS,IAAR,CAAaD,MAAM,CAACE,MAApB;AACD,OAFD;AAGAJ,MAAAA,aAAa;AACd,KAVL,EAWI,SAASK,IAAT,CAAcC,GAAd,EAAmB;AACjB,UAAIA,GAAJ,EAAS;AACPjB,QAAAA,MAAM,CAACiB,GAAD,CAAN;AACD;;AACDlB,MAAAA,OAAO,CAACM,OAAD,CAAP;AACD,KAhBL;AAkBD,GA/BM,CAAP;AAgCD,CAjCD;;AAmCA,eAAeT,YAAf","sourcesContent":["var Airtable = require(\"airtable\");\r\nvar base = new Airtable({ apiKey: \"keysF3r1wa1KybX8y\" }).base(\r\n  \"appqHN4JFZxWxuR4R\"\r\n);\r\n\r\nconst callAirtable = (cnpj) => {\r\n  return new Promise((resolve, reject) => {\r\n    let str = cnpj.toString();\r\n    let CNPJ =\r\n      str.slice(0, 2) +\r\n      \".\" +\r\n      str.slice(2, 5) +\r\n      \".\" +\r\n      str.slice(5, 8) +\r\n      \"/\" +\r\n      str.slice(8, 12) +\r\n      \"-\" +\r\n      str.slice(12, 14);\r\n    let pedidos = [];\r\n    base(\"Pedidos\")\r\n      .select({\r\n        filterByFormula: `({CNPJ} = '${CNPJ}')`,\r\n      })\r\n      .eachPage(\r\n        function page(records, fetchNextPage) {\r\n          records.forEach(function (record) {\r\n            pedidos.push(record.fields);\r\n          });\r\n          fetchNextPage();\r\n        },\r\n        function done(err) {\r\n          if (err) {\r\n            reject(err);\r\n          }\r\n          resolve(pedidos);\r\n        }\r\n      );\r\n  });\r\n};\r\n\r\nexport default callAirtable;\r\n"]},"metadata":{},"sourceType":"module"}