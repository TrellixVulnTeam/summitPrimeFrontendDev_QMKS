{"ast":null,"code":"import { addOrcamento, changeOrcamentoAtivo, changePage, loading, toggleModal } from \"../Actions\";\nimport { SaveOrcamento } from \"./SaveOrcamento\";\n\nlet crypto = require(\"crypto\");\n\nconst csv2json = require(\"csvjson-csv2json\");\n\nexport const CriarOrcamentoVnda = titulo => {\n  return async (dispatch, getState) => {\n    try {\n      console.log(\"criar\");\n      let id = crypto.randomBytes(20).toString(\"hex\").toUpperCase();\n      let orcamento = {\n        id,\n        titulo,\n        pagamentoAntecipado: false,\n        itens: [],\n        criadoEm: new Date(),\n        ultimaModificacao: new Date()\n      };\n      let databank = getState().databank;\n      let config = getState().config;\n      let orcamentoIndex = databank.orcamentosPrime.length;\n      let indexOrcamentoVnda = config.modals.criarOrcamentoVnda.id;\n      console.log(indexOrcamentoVnda);\n      let orcamentoVnda = databank.orcamentosVnda[indexOrcamentoVnda];\n      let produtos = databank.produtos;\n      let produtosVnda = csv2json(orcamentoVnda[\"CSV\"]);\n\n      for (let i = 0; i < produtosVnda.length; i++) {\n        let {\n          Referência: sku,\n          Quantidade: quantidade\n        } = produtosVnda[i];\n        let item = produtos.find(produto => {\n          return produto.sku === parseInt(sku);\n        });\n\n        if (item && quantidade) {\n          orcamento.itens.push({ ...item,\n            quantidade\n          });\n        } else {\n          orcamento.itens.push({\n            sku\n          });\n        }\n      }\n\n      dispatch(addOrcamento(orcamento));\n      dispatch(changeOrcamentoAtivo(orcamentoIndex));\n      dispatch(toggleModal({\n        criarOrcamentoVnda: {\n          show: false\n        }\n      }));\n      dispatch(changePage(\"orcamentoAtual\"));\n      dispatch(SaveOrcamento());\n    } catch (e) {\n      console.log(e);\n      dispatch(loading(false));\n    }\n  };\n};\n_c = CriarOrcamentoVnda;\n\nvar _c;\n\n$RefreshReg$(_c, \"CriarOrcamentoVnda\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/Orcamentos/CriarOrcamentoVnda.js"],"names":["addOrcamento","changeOrcamentoAtivo","changePage","loading","toggleModal","SaveOrcamento","crypto","require","csv2json","CriarOrcamentoVnda","titulo","dispatch","getState","console","log","id","randomBytes","toString","toUpperCase","orcamento","pagamentoAntecipado","itens","criadoEm","Date","ultimaModificacao","databank","config","orcamentoIndex","orcamentosPrime","length","indexOrcamentoVnda","modals","criarOrcamentoVnda","orcamentoVnda","orcamentosVnda","produtos","produtosVnda","i","Referência","sku","Quantidade","quantidade","item","find","produto","parseInt","push","show","e"],"mappings":"AAAA,SACEA,YADF,EAEEC,oBAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,WALF,QAMO,YANP;AAQA,SAASC,aAAT,QAA8B,iBAA9B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAxB;;AAEA,OAAO,MAAME,kBAAkB,GAAIC,MAAD,IAAY;AAC5C,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAIC,EAAE,GAAGT,MAAM,CAACU,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,EAAuCC,WAAvC,EAAT;AACA,UAAIC,SAAS,GAAG;AACdJ,QAAAA,EADc;AAEdL,QAAAA,MAFc;AAGdU,QAAAA,mBAAmB,EAAE,KAHP;AAIdC,QAAAA,KAAK,EAAE,EAJO;AAKdC,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,EALI;AAMdC,QAAAA,iBAAiB,EAAE,IAAID,IAAJ;AANL,OAAhB;AASA,UAAIE,QAAQ,GAAGb,QAAQ,GAAGa,QAA1B;AACA,UAAIC,MAAM,GAAGd,QAAQ,GAAGc,MAAxB;AACA,UAAIC,cAAc,GAAGF,QAAQ,CAACG,eAAT,CAAyBC,MAA9C;AACA,UAAIC,kBAAkB,GAAGJ,MAAM,CAACK,MAAP,CAAcC,kBAAd,CAAiCjB,EAA1D;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYgB,kBAAZ;AACA,UAAIG,aAAa,GAAGR,QAAQ,CAACS,cAAT,CAAwBJ,kBAAxB,CAApB;AACA,UAAIK,QAAQ,GAAGV,QAAQ,CAACU,QAAxB;AACA,UAAIC,YAAY,GAAG5B,QAAQ,CAACyB,aAAa,CAAC,KAAD,CAAd,CAA3B;;AAEA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAACP,MAAjC,EAAyCQ,CAAC,EAA1C,EAA8C;AAC5C,YAAI;AAAEC,UAAAA,UAAU,EAAEC,GAAd;AAAmBC,UAAAA,UAAU,EAAEC;AAA/B,YAA8CL,YAAY,CAACC,CAAD,CAA9D;AACA,YAAIK,IAAI,GAAGP,QAAQ,CAACQ,IAAT,CAAeC,OAAD,IAAa;AACpC,iBAAOA,OAAO,CAACL,GAAR,KAAgBM,QAAQ,CAACN,GAAD,CAA/B;AACD,SAFU,CAAX;;AAGA,YAAIG,IAAI,IAAID,UAAZ,EAAwB;AACtBtB,UAAAA,SAAS,CAACE,KAAV,CAAgByB,IAAhB,CAAqB,EAAE,GAAGJ,IAAL;AAAWD,YAAAA;AAAX,WAArB;AACD,SAFD,MAEO;AACLtB,UAAAA,SAAS,CAACE,KAAV,CAAgByB,IAAhB,CAAqB;AAAEP,YAAAA;AAAF,WAArB;AACD;AACF;;AACD5B,MAAAA,QAAQ,CAACX,YAAY,CAACmB,SAAD,CAAb,CAAR;AACAR,MAAAA,QAAQ,CAACV,oBAAoB,CAAC0B,cAAD,CAArB,CAAR;AACAhB,MAAAA,QAAQ,CAACP,WAAW,CAAC;AAAE4B,QAAAA,kBAAkB,EAAE;AAAEe,UAAAA,IAAI,EAAE;AAAR;AAAtB,OAAD,CAAZ,CAAR;AACApC,MAAAA,QAAQ,CAACT,UAAU,CAAC,gBAAD,CAAX,CAAR;AACAS,MAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACD,KArCD,CAqCE,OAAO2C,CAAP,EAAU;AACVnC,MAAAA,OAAO,CAACC,GAAR,CAAYkC,CAAZ;AACArC,MAAAA,QAAQ,CAACR,OAAO,CAAC,KAAD,CAAR,CAAR;AACD;AACF,GA1CD;AA2CD,CA5CM;KAAMM,kB","sourcesContent":["import {\r\n  addOrcamento,\r\n  changeOrcamentoAtivo,\r\n  changePage,\r\n  loading,\r\n  toggleModal,\r\n} from \"../Actions\";\r\n\r\nimport { SaveOrcamento } from \"./SaveOrcamento\";\r\nlet crypto = require(\"crypto\");\r\n\r\nconst csv2json = require(\"csvjson-csv2json\");\r\n\r\nexport const CriarOrcamentoVnda = (titulo) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      console.log(\"criar\");\r\n      let id = crypto.randomBytes(20).toString(\"hex\").toUpperCase();\r\n      let orcamento = {\r\n        id,\r\n        titulo,\r\n        pagamentoAntecipado: false,\r\n        itens: [],\r\n        criadoEm: new Date(),\r\n        ultimaModificacao: new Date(),\r\n      };\r\n\r\n      let databank = getState().databank;\r\n      let config = getState().config;\r\n      let orcamentoIndex = databank.orcamentosPrime.length;\r\n      let indexOrcamentoVnda = config.modals.criarOrcamentoVnda.id;\r\n      console.log(indexOrcamentoVnda);\r\n      let orcamentoVnda = databank.orcamentosVnda[indexOrcamentoVnda];\r\n      let produtos = databank.produtos;\r\n      let produtosVnda = csv2json(orcamentoVnda[\"CSV\"]);\r\n\r\n      for (let i = 0; i < produtosVnda.length; i++) {\r\n        let { Referência: sku, Quantidade: quantidade } = produtosVnda[i];\r\n        let item = produtos.find((produto) => {\r\n          return produto.sku === parseInt(sku);\r\n        });\r\n        if (item && quantidade) {\r\n          orcamento.itens.push({ ...item, quantidade });\r\n        } else {\r\n          orcamento.itens.push({ sku });\r\n        }\r\n      }\r\n      dispatch(addOrcamento(orcamento));\r\n      dispatch(changeOrcamentoAtivo(orcamentoIndex));\r\n      dispatch(toggleModal({ criarOrcamentoVnda: { show: false } }));\r\n      dispatch(changePage(\"orcamentoAtual\"));\r\n      dispatch(SaveOrcamento());\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(loading(false));\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}