{"ast":null,"code":"import { loading, login, logout, setError, updateOrcamentos } from \"./Actions\";\nimport CallBackend from \"./CallBackend\";\nexport const getUserInfo = () => {\n  return async (dispatch, getState) => {\n    dispatch(loading(true));\n    let {\n      socket\n    } = getState().pages;\n    let token = localStorage.getItem(\"token\");\n\n    if (token) {\n      await CallBackend(socket, \"getUserInfo\", token).then(r => {\n        dispatch(login(r.informacoes));\n        dispatch(updateOrcamentos({\n          salvos: r.orcamentos\n        }));\n        dispatch(loading(false));\n      }).catch(err => {\n        dispatch(logout());\n        dispatch(loading(false));\n      });\n    } else {\n      dispatch(logout());\n      dispatch(loading(false));\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/GetUserInfo.js"],"names":["loading","login","logout","setError","updateOrcamentos","CallBackend","getUserInfo","dispatch","getState","socket","pages","token","localStorage","getItem","then","r","informacoes","salvos","orcamentos","catch","err"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,QAAjC,EAA2CC,gBAA3C,QAAmE,WAAnE;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCD,IAAAA,QAAQ,CAACP,OAAO,CAAC,IAAD,CAAR,CAAR;AACA,QAAI;AAAES,MAAAA;AAAF,QAAaD,QAAQ,GAAGE,KAA5B;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,QAAIF,KAAJ,EAAW;AACT,YAAMN,WAAW,CAACI,MAAD,EAAS,aAAT,EAAwBE,KAAxB,CAAX,CACHG,IADG,CACGC,CAAD,IAAO;AACXR,QAAAA,QAAQ,CAACN,KAAK,CAACc,CAAC,CAACC,WAAH,CAAN,CAAR;AACAT,QAAAA,QAAQ,CAACH,gBAAgB,CAAC;AAAEa,UAAAA,MAAM,EAAEF,CAAC,CAACG;AAAZ,SAAD,CAAjB,CAAR;AACAX,QAAAA,QAAQ,CAACP,OAAO,CAAC,KAAD,CAAR,CAAR;AACD,OALG,EAMHmB,KANG,CAMIC,GAAD,IAAS;AACdb,QAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACAK,QAAAA,QAAQ,CAACP,OAAO,CAAC,KAAD,CAAR,CAAR;AACD,OATG,CAAN;AAUD,KAXD,MAWO;AACLO,MAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACAK,MAAAA,QAAQ,CAACP,OAAO,CAAC,KAAD,CAAR,CAAR;AACD;AACF,GAnBD;AAoBD,CArBM","sourcesContent":["import { loading, login, logout, setError, updateOrcamentos } from \"./Actions\";\r\nimport CallBackend from \"./CallBackend\";\r\n\r\nexport const getUserInfo = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(loading(true));\r\n    let { socket } = getState().pages;\r\n    let token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      await CallBackend(socket, \"getUserInfo\", token)\r\n        .then((r) => {\r\n          dispatch(login(r.informacoes));\r\n          dispatch(updateOrcamentos({ salvos: r.orcamentos }));\r\n          dispatch(loading(false));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(logout());\r\n          dispatch(loading(false));\r\n        });\r\n    } else {\r\n      dispatch(logout());\r\n      dispatch(loading(false));\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}