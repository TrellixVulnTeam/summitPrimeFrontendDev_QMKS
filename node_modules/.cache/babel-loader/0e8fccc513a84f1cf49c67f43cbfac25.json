{"ast":null,"code":"import { setFiltros } from \"../Actions\";\nexport const ToggleFiltros = (mlce, categorias, isChecked) => {\n  return async (dispatch, getState) => {\n    let produtos = getState().databank.produtos;\n    let filtros = getState().loja.filtros;\n    filtros[mlce.toLowerCase()][categorias].checked = isChecked;\n    let allChecked = [];\n    let mlceKeys = Object.keys(filtros);\n\n    for (let i = 0; i < mlceKeys.length; i++) {\n      const mlceKey = filtros[mlceKeys[i]];\n      let categoriasKeys = Object.keys(mlceKey);\n\n      for (let j = 0; j < categoriasKeys.length; j++) {\n        const categoriasKey = mlceKey[categoriasKeys[j]];\n\n        if (categoriasKey.checked) {\n          let toPush = [mlceKeys[i], categoriasKeys[j]];\n          allChecked.push(toPush);\n        }\n      }\n    }\n\n    let produtosAtivos = [];\n\n    for (let i = 0; i < allChecked.length; i++) {\n      const checked = allChecked[i];\n      let produtoAtivo = produtos.filter(produto => {\n        return produto.tags[checked[0]] == [checked[1]];\n      });\n      produtosAtivos.push(...produtoAtivo);\n    }\n\n    console.log(produtosAtivos);\n    dispatch(setFiltros(filtros));\n  };\n};\n_c = ToggleFiltros;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleFiltros\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/Loja/ToggleFiltros.js"],"names":["setFiltros","ToggleFiltros","mlce","categorias","isChecked","dispatch","getState","produtos","databank","filtros","loja","toLowerCase","checked","allChecked","mlceKeys","Object","keys","i","length","mlceKey","categoriasKeys","j","categoriasKey","toPush","push","produtosAtivos","produtoAtivo","filter","produto","tags","console","log"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,SAAnB,KAAiC;AAC5D,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAIC,QAAQ,GAAGD,QAAQ,GAAGE,QAAX,CAAoBD,QAAnC;AACA,QAAIE,OAAO,GAAGH,QAAQ,GAAGI,IAAX,CAAgBD,OAA9B;AAEAA,IAAAA,OAAO,CAACP,IAAI,CAACS,WAAL,EAAD,CAAP,CAA4BR,UAA5B,EAAwCS,OAAxC,GAAkDR,SAAlD;AAEA,QAAIS,UAAU,GAAG,EAAjB;AAEA,QAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYP,OAAZ,CAAf;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAME,OAAO,GAAGV,OAAO,CAACK,QAAQ,CAACG,CAAD,CAAT,CAAvB;AACA,UAAIG,cAAc,GAAGL,MAAM,CAACC,IAAP,CAAYG,OAAZ,CAArB;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACF,MAAnC,EAA2CG,CAAC,EAA5C,EAAgD;AAC9C,cAAMC,aAAa,GAAGH,OAAO,CAACC,cAAc,CAACC,CAAD,CAAf,CAA7B;;AAEA,YAAIC,aAAa,CAACV,OAAlB,EAA2B;AACzB,cAAIW,MAAM,GAAG,CAACT,QAAQ,CAACG,CAAD,CAAT,EAAcG,cAAc,CAACC,CAAD,CAA5B,CAAb;AACAR,UAAAA,UAAU,CAACW,IAAX,CAAgBD,MAAhB;AACD;AACF;AACF;;AACD,QAAIE,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACK,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,YAAML,OAAO,GAAGC,UAAU,CAACI,CAAD,CAA1B;AAEA,UAAIS,YAAY,GAAGnB,QAAQ,CAACoB,MAAT,CAAiBC,OAAD,IAAa;AAC9C,eAAOA,OAAO,CAACC,IAAR,CAAajB,OAAO,CAAC,CAAD,CAApB,KAA4B,CAACA,OAAO,CAAC,CAAD,CAAR,CAAnC;AACD,OAFkB,CAAnB;AAGAa,MAAAA,cAAc,CAACD,IAAf,CAAoB,GAAGE,YAAvB;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACApB,IAAAA,QAAQ,CAACL,UAAU,CAACS,OAAD,CAAX,CAAR;AACD,GAhCD;AAiCD,CAlCM;KAAMR,a","sourcesContent":["import { setFiltros } from \"../Actions\";\r\n\r\nexport const ToggleFiltros = (mlce, categorias, isChecked) => {\r\n  return async (dispatch, getState) => {\r\n    let produtos = getState().databank.produtos;\r\n    let filtros = getState().loja.filtros;\r\n\r\n    filtros[mlce.toLowerCase()][categorias].checked = isChecked;\r\n\r\n    let allChecked = [];\r\n\r\n    let mlceKeys = Object.keys(filtros);\r\n    for (let i = 0; i < mlceKeys.length; i++) {\r\n      const mlceKey = filtros[mlceKeys[i]];\r\n      let categoriasKeys = Object.keys(mlceKey);\r\n      for (let j = 0; j < categoriasKeys.length; j++) {\r\n        const categoriasKey = mlceKey[categoriasKeys[j]];\r\n\r\n        if (categoriasKey.checked) {\r\n          let toPush = [mlceKeys[i], categoriasKeys[j]];\r\n          allChecked.push(toPush);\r\n        }\r\n      }\r\n    }\r\n    let produtosAtivos = [];\r\n    for (let i = 0; i < allChecked.length; i++) {\r\n      const checked = allChecked[i];\r\n\r\n      let produtoAtivo = produtos.filter((produto) => {\r\n        return produto.tags[checked[0]] == [checked[1]];\r\n      });\r\n      produtosAtivos.push(...produtoAtivo);\r\n    }\r\n    console.log(produtosAtivos);\r\n    dispatch(setFiltros(filtros));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}