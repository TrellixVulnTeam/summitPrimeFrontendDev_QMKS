{"ast":null,"code":"import { changePage, loading, toggleModal, updateOrcamentos } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nimport { GetOrcamentos } from \"./GetOrcamentos\";\nexport const criarOrcamento = (titulo, itens, changePagina) => {\n  return async (dispatch, getState) => {\n    dispatch(loading(true));\n    let cnpj = getState().informacoes.cnpj;\n    let token = localStorage.getItem(\"token\");\n    let id = Math.random().toString(36).slice(-8).toUpperCase();\n    let orcamentoPadrao = {\n      id,\n      titulo: \"\",\n      cnpj: \"\",\n      subTotal: 0,\n      subTotalDisponivel: 0,\n      total: \"0\",\n      totalDisponivel: 0,\n      pagamentoAntecipado: false,\n      itens: [{\n        sku: \"\",\n        nome: \"\",\n        caixaMaster: 0,\n        valor: 0,\n        valorReal: 0,\n        quantidade: 0,\n        multiplo: 0,\n        preco: 0,\n        estoque: 0\n      }],\n      criadoEm: new Date(),\n      ultimaModificacao: new Date()\n    };\n\n    if (itens === false) {\n      itens = orcamentoPadrao.itens;\n    }\n\n    let orcamento = { ...orcamentoPadrao,\n      titulo,\n      itens,\n      cnpj\n    };\n    await callBackend(\"/putOrcamento\", token, {\n      orcamento\n    });\n    await dispatch(GetOrcamentos(\"salvos\"));\n    await dispatch(updateOrcamentos({\n      atual: id\n    }));\n    await dispatch(toggleModal(\"criarOrcamento\", false));\n    await dispatch(loading(false));\n\n    if (changePagina) {\n      await dispatch(changePage(\"orcamentoAtual\"));\n      await dispatch(toggleModal(\"informacoes\", true));\n    }\n\n    Promise.resolve();\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/CriarOrcamento.js"],"names":["changePage","loading","toggleModal","updateOrcamentos","callBackend","GetOrcamentos","criarOrcamento","titulo","itens","changePagina","dispatch","getState","cnpj","informacoes","token","localStorage","getItem","id","Math","random","toString","slice","toUpperCase","orcamentoPadrao","subTotal","subTotalDisponivel","total","totalDisponivel","pagamentoAntecipado","sku","nome","caixaMaster","valor","valorReal","quantidade","multiplo","preco","estoque","criadoEm","Date","ultimaModificacao","orcamento","atual","Promise","resolve"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,WAA9B,EAA2CC,gBAA3C,QAAmE,WAAnE;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,YAAhB,KAAiC;AAC7D,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCD,IAAAA,QAAQ,CAACT,OAAO,CAAC,IAAD,CAAR,CAAR;AACA,QAAIW,IAAI,GAAGD,QAAQ,GAAGE,WAAX,CAAuBD,IAAlC;AACA,QAAIE,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,QAAIC,EAAE,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAC,CAAlC,EAAqCC,WAArC,EAAT;AACA,QAAIC,eAAe,GAAG;AACpBN,MAAAA,EADoB;AAEpBV,MAAAA,MAAM,EAAE,EAFY;AAGpBK,MAAAA,IAAI,EAAE,EAHc;AAIpBY,MAAAA,QAAQ,EAAE,CAJU;AAKpBC,MAAAA,kBAAkB,EAAE,CALA;AAMpBC,MAAAA,KAAK,EAAE,GANa;AAOpBC,MAAAA,eAAe,EAAE,CAPG;AAQpBC,MAAAA,mBAAmB,EAAE,KARD;AASpBpB,MAAAA,KAAK,EAAE,CACL;AACEqB,QAAAA,GAAG,EAAE,EADP;AAEEC,QAAAA,IAAI,EAAE,EAFR;AAGEC,QAAAA,WAAW,EAAE,CAHf;AAIEC,QAAAA,KAAK,EAAE,CAJT;AAKEC,QAAAA,SAAS,EAAE,CALb;AAMEC,QAAAA,UAAU,EAAE,CANd;AAOEC,QAAAA,QAAQ,EAAE,CAPZ;AAQEC,QAAAA,KAAK,EAAE,CART;AASEC,QAAAA,OAAO,EAAE;AATX,OADK,CATa;AAsBpBC,MAAAA,QAAQ,EAAE,IAAIC,IAAJ,EAtBU;AAuBpBC,MAAAA,iBAAiB,EAAE,IAAID,IAAJ;AAvBC,KAAtB;;AAyBA,QAAI/B,KAAK,KAAK,KAAd,EAAqB;AACnBA,MAAAA,KAAK,GAAGe,eAAe,CAACf,KAAxB;AACD;;AACD,QAAIiC,SAAS,GAAG,EAAE,GAAGlB,eAAL;AAAsBhB,MAAAA,MAAtB;AAA8BC,MAAAA,KAA9B;AAAqCI,MAAAA;AAArC,KAAhB;AACA,UAAMR,WAAW,CAAC,eAAD,EAAkBU,KAAlB,EAAyB;AAAE2B,MAAAA;AAAF,KAAzB,CAAjB;AACA,UAAM/B,QAAQ,CAACL,aAAa,CAAC,QAAD,CAAd,CAAd;AACA,UAAMK,QAAQ,CAACP,gBAAgB,CAAC;AAAEuC,MAAAA,KAAK,EAAEzB;AAAT,KAAD,CAAjB,CAAd;AACA,UAAMP,QAAQ,CAACR,WAAW,CAAC,gBAAD,EAAmB,KAAnB,CAAZ,CAAd;AACA,UAAMQ,QAAQ,CAACT,OAAO,CAAC,KAAD,CAAR,CAAd;;AACA,QAAIQ,YAAJ,EAAkB;AAChB,YAAMC,QAAQ,CAACV,UAAU,CAAC,gBAAD,CAAX,CAAd;AACA,YAAMU,QAAQ,CAACR,WAAW,CAAC,aAAD,EAAgB,IAAhB,CAAZ,CAAd;AACD;;AACDyC,IAAAA,OAAO,CAACC,OAAR;AACD,GA5CD;AA6CD,CA9CM","sourcesContent":["import { changePage, loading, toggleModal, updateOrcamentos } from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\nimport { GetOrcamentos } from \"./GetOrcamentos\";\r\n\r\nexport const criarOrcamento = (titulo, itens, changePagina) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(loading(true));\r\n    let cnpj = getState().informacoes.cnpj;\r\n    let token = localStorage.getItem(\"token\");\r\n    let id = Math.random().toString(36).slice(-8).toUpperCase();\r\n    let orcamentoPadrao = {\r\n      id,\r\n      titulo: \"\",\r\n      cnpj: \"\",\r\n      subTotal: 0,\r\n      subTotalDisponivel: 0,\r\n      total: \"0\",\r\n      totalDisponivel: 0,\r\n      pagamentoAntecipado: false,\r\n      itens: [\r\n        {\r\n          sku: \"\",\r\n          nome: \"\",\r\n          caixaMaster: 0,\r\n          valor: 0,\r\n          valorReal: 0,\r\n          quantidade: 0,\r\n          multiplo: 0,\r\n          preco: 0,\r\n          estoque: 0,\r\n        },\r\n      ],\r\n      criadoEm: new Date(),\r\n      ultimaModificacao: new Date(),\r\n    };\r\n    if (itens === false) {\r\n      itens = orcamentoPadrao.itens;\r\n    }\r\n    let orcamento = { ...orcamentoPadrao, titulo, itens, cnpj };\r\n    await callBackend(\"/putOrcamento\", token, { orcamento });\r\n    await dispatch(GetOrcamentos(\"salvos\"));\r\n    await dispatch(updateOrcamentos({ atual: id }));\r\n    await dispatch(toggleModal(\"criarOrcamento\", false));\r\n    await dispatch(loading(false));\r\n    if (changePagina) {\r\n      await dispatch(changePage(\"orcamentoAtual\"));\r\n      await dispatch(toggleModal(\"informacoes\", true));\r\n    }\r\n    Promise.resolve();\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}