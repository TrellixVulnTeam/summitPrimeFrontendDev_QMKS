{"ast":null,"code":"let defaultState = {\n  salvos: [],\n  vnda: [],\n  nf: [],\n  produtos: [],\n  atual: false\n};\n\nconst reducerOrcamentos = (state = defaultState, action) => {\n  const index = action.index;\n  let item;\n\n  if (state.salvos[action.indexOrcamento]) {\n    item = state.salvos[action.indexOrcamento].itens[index];\n  }\n\n  switch (action.type) {\n    case \"UPDATEORCAMENTOS\":\n      return { ...state,\n        ...action.input\n      };\n\n    case \"ADDITEM\":\n      let salvos = [...state.salvos];\n\n      if (action.item) {\n        salvos[action.indexOrcamento].itens.push(action.item);\n      } else {\n        salvos[action.indexOrcamento].itens.push({\n          sku: 0,\n          quantidade: 0\n        });\n      }\n\n      return { ...state,\n        salvos\n      };\n\n    case \"DELETEITEM\":\n      console.log(index);\n      state.salvos[action.indexOrcamento].itens.splice(index, 1);\n      console.log(state.salvos[action.indexOrcamento].itens);\n      return { ...state\n      };\n\n    case \"TROCARITEM\":\n      state.salvos[action.indexOrcamento].itens[index] = { ...action.infos\n      };\n      return { ...state\n      };\n\n    case \"CHANGEQUANTIDADE\":\n      if (action.str === \"inc\") {\n        const novaQuantidade = item.quantidade + item.multiplo;\n        state.salvos[action.indexOrcamento].itens[index].quantidade = novaQuantidade;\n      } else if (action.str === \"dec\") {\n        const novaQuantidade = item.quantidade - item.multiplo;\n\n        if (novaQuantidade >= 0) {\n          state.salvos[action.indexOrcamento].itens[index].quantidade = novaQuantidade;\n        }\n      }\n\n      return { ...state\n      };\n\n    case \"UPDATEORCAMENTOSALVO\":\n      state.salvos[action.indexOrcamento] = action.orcamento;\n      return { ...state\n      };\n\n    case \"PAGAMENTOANTECIPADO\":\n      state.salvos[action.indexOrcamento].pagamentoAntecipado = action.isAntecipado;\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerOrcamentos;","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Reducers/orcamentos.js"],"names":["defaultState","salvos","vnda","nf","produtos","atual","reducerOrcamentos","state","action","index","item","indexOrcamento","itens","type","input","push","sku","quantidade","console","log","splice","infos","str","novaQuantidade","multiplo","orcamento","pagamentoAntecipado","isAntecipado"],"mappings":"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","sourcesContent":["let defaultState = {\r\n  salvos: [],\r\n  vnda: [],\r\n  nf: [],\r\n  produtos: [],\r\n  atual: false,\r\n};\r\n\r\nconst reducerOrcamentos = (state = defaultState, action) => {\r\n  const index = action.index;\r\n  let item;\r\n  if (state.salvos[action.indexOrcamento]) {\r\n    item = state.salvos[action.indexOrcamento].itens[index];\r\n  }\r\n  switch (action.type) {\r\n    case \"UPDATEORCAMENTOS\":\r\n      return { ...state, ...action.input };\r\n\r\n    case \"ADDITEM\":\r\n      let salvos = [...state.salvos];\r\n      if (action.item) {\r\n        salvos[action.indexOrcamento].itens.push(action.item);\r\n      } else {\r\n        salvos[action.indexOrcamento].itens.push({\r\n          sku: 0,\r\n          quantidade: 0,\r\n        });\r\n      }\r\n      return { ...state, salvos };\r\n    case \"DELETEITEM\":\r\n      console.log(index);\r\n      state.salvos[action.indexOrcamento].itens.splice(index, 1);\r\n      console.log(state.salvos[action.indexOrcamento].itens);\r\n      return { ...state };\r\n    case \"TROCARITEM\":\r\n      state.salvos[action.indexOrcamento].itens[index] = {\r\n        ...action.infos,\r\n      };\r\n      return { ...state };\r\n\r\n    case \"CHANGEQUANTIDADE\":\r\n      if (action.str === \"inc\") {\r\n        const novaQuantidade = item.quantidade + item.multiplo;\r\n        state.salvos[action.indexOrcamento].itens[index].quantidade =\r\n          novaQuantidade;\r\n      } else if (action.str === \"dec\") {\r\n        const novaQuantidade = item.quantidade - item.multiplo;\r\n        if (novaQuantidade >= 0) {\r\n          state.salvos[action.indexOrcamento].itens[index].quantidade =\r\n            novaQuantidade;\r\n        }\r\n      }\r\n      return { ...state };\r\n    case \"UPDATEORCAMENTOSALVO\":\r\n      state.salvos[action.indexOrcamento] = action.orcamento;\r\n      return { ...state };\r\n    case \"PAGAMENTOANTECIPADO\":\r\n      state.salvos[action.indexOrcamento].pagamentoAntecipado =\r\n        action.isAntecipado;\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducerOrcamentos;\r\n"]},"metadata":{},"sourceType":"module"}