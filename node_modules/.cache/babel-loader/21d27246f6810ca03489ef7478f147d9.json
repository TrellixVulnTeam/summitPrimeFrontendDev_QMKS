{"ast":null,"code":"import { changeItens } from \"../Actions\";\nimport { saveOrcamento } from \"../SaveOrcamento\";\nexport const ChangeItens = (sku, quantidade) => {\n  return (dispatch, getState) => {\n    console.log(sku);\n    console.log(quantidade);\n    let orcamentos = getState().orcamentos;\n    let indexOrcamento = orcamentos.salvos.findIndex(orcamento => orcamento.id === orcamentos.atual);\n    let itens = getState().orcamentos.salvos[indexOrcamento].itens;\n\n    if (!sku || sku === 0) {\n      let indexBranco = itens.findIndex(item => item.sku === 0);\n      console.log(indexBranco);\n\n      if (indexBranco === -1) {\n        itens.push({});\n      } else {\n        itens.push({});\n        itens.splice(indexBranco, 1);\n      }\n    } else {\n      let produtoIndex = itens.findIndex(item => item.sku === sku);\n\n      if (produtoIndex !== -1) {\n        if (quantidade > 0) {\n          itens[produtoIndex].quantidade = quantidade;\n        } else {\n          if (itens.length === 1) {\n            itens.push({});\n          }\n\n          itens.splice(produtoIndex, 1);\n        }\n      } else {\n        itens.push({\n          sku,\n          quantidade\n        });\n      }\n    }\n\n    dispatch(changeItens(itens, indexOrcamento));\n    dispatch(saveOrcamento({\n      index: indexOrcamento\n    }));\n  };\n};\n_c = ChangeItens;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeItens\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/TabelaActions/ChangeItens.js"],"names":["changeItens","saveOrcamento","ChangeItens","sku","quantidade","dispatch","getState","console","log","orcamentos","indexOrcamento","salvos","findIndex","orcamento","id","atual","itens","indexBranco","item","push","splice","produtoIndex","length","index"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC9C,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACA,QAAIK,UAAU,GAAGH,QAAQ,GAAGG,UAA5B;AACA,QAAIC,cAAc,GAAGD,UAAU,CAACE,MAAX,CAAkBC,SAAlB,CAClBC,SAAD,IAAeA,SAAS,CAACC,EAAV,KAAiBL,UAAU,CAACM,KADxB,CAArB;AAGA,QAAIC,KAAK,GAAGV,QAAQ,GAAGG,UAAX,CAAsBE,MAAtB,CAA6BD,cAA7B,EAA6CM,KAAzD;;AACA,QAAI,CAACb,GAAD,IAAQA,GAAG,KAAK,CAApB,EAAuB;AACrB,UAAIc,WAAW,GAAGD,KAAK,CAACJ,SAAN,CAAiBM,IAAD,IAAUA,IAAI,CAACf,GAAL,KAAa,CAAvC,CAAlB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYS,WAAZ;;AACA,UAAIA,WAAW,KAAK,CAAC,CAArB,EAAwB;AACtBD,QAAAA,KAAK,CAACG,IAAN,CAAW,EAAX;AACD,OAFD,MAEO;AACLH,QAAAA,KAAK,CAACG,IAAN,CAAW,EAAX;AACAH,QAAAA,KAAK,CAACI,MAAN,CAAaH,WAAb,EAA0B,CAA1B;AACD;AACF,KATD,MASO;AACL,UAAII,YAAY,GAAGL,KAAK,CAACJ,SAAN,CAAiBM,IAAD,IAAUA,IAAI,CAACf,GAAL,KAAaA,GAAvC,CAAnB;;AACA,UAAIkB,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvB,YAAIjB,UAAU,GAAG,CAAjB,EAAoB;AAClBY,UAAAA,KAAK,CAACK,YAAD,CAAL,CAAoBjB,UAApB,GAAiCA,UAAjC;AACD,SAFD,MAEO;AACL,cAAIY,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtBN,YAAAA,KAAK,CAACG,IAAN,CAAW,EAAX;AACD;;AACDH,UAAAA,KAAK,CAACI,MAAN,CAAaC,YAAb,EAA2B,CAA3B;AACD;AACF,OATD,MASO;AACLL,QAAAA,KAAK,CAACG,IAAN,CAAW;AAAEhB,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAX;AACD;AACF;;AAEDC,IAAAA,QAAQ,CAACL,WAAW,CAACgB,KAAD,EAAQN,cAAR,CAAZ,CAAR;AACAL,IAAAA,QAAQ,CAACJ,aAAa,CAAC;AAAEsB,MAAAA,KAAK,EAAEb;AAAT,KAAD,CAAd,CAAR;AACD,GAnCD;AAoCD,CArCM;KAAMR,W","sourcesContent":["import { changeItens } from \"../Actions\";\r\nimport { saveOrcamento } from \"../SaveOrcamento\";\r\n\r\nexport const ChangeItens = (sku, quantidade) => {\r\n  return (dispatch, getState) => {\r\n    console.log(sku);\r\n    console.log(quantidade);\r\n    let orcamentos = getState().orcamentos;\r\n    let indexOrcamento = orcamentos.salvos.findIndex(\r\n      (orcamento) => orcamento.id === orcamentos.atual\r\n    );\r\n    let itens = getState().orcamentos.salvos[indexOrcamento].itens;\r\n    if (!sku || sku === 0) {\r\n      let indexBranco = itens.findIndex((item) => item.sku === 0);\r\n      console.log(indexBranco);\r\n      if (indexBranco === -1) {\r\n        itens.push({});\r\n      } else {\r\n        itens.push({});\r\n        itens.splice(indexBranco, 1);\r\n      }\r\n    } else {\r\n      let produtoIndex = itens.findIndex((item) => item.sku === sku);\r\n      if (produtoIndex !== -1) {\r\n        if (quantidade > 0) {\r\n          itens[produtoIndex].quantidade = quantidade;\r\n        } else {\r\n          if (itens.length === 1) {\r\n            itens.push({});\r\n          }\r\n          itens.splice(produtoIndex, 1);\r\n        }\r\n      } else {\r\n        itens.push({ sku, quantidade });\r\n      }\r\n    }\r\n\r\n    dispatch(changeItens(itens, indexOrcamento));\r\n    dispatch(saveOrcamento({ index: indexOrcamento }));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}