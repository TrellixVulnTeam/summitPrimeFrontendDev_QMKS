{"ast":null,"code":"import { trocarItens } from \"../Actions\";\nimport { saveOrcamento } from \"../SaveOrcamento\";\nexport const ChangeQuantidade = (sku, quantidade, indexOrcamento) => {\n  return (dispatch, getState) => {\n    let itens = getState().orcamentos.salvos[indexOrcamento].itens;\n\n    if (!sku) {\n      itens.push({});\n    } else {\n      let produtoIndex = itens.findIndex(item => item.sku === sku);\n\n      if (produtoIndex !== -1) {\n        itens[produtoIndex].quantidade = quantidade;\n      } else {\n        itens.push({\n          sku,\n          quantidade\n        });\n      }\n    }\n\n    dispatch(trocarItens(itens, indexOrcamento));\n    dispatch(saveOrcamento({\n      index: indexOrcamento\n    }));\n  };\n};\n_c = ChangeQuantidade;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeQuantidade\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/TabelaActions/ChangeQuantidade.js"],"names":["trocarItens","saveOrcamento","ChangeQuantidade","sku","quantidade","indexOrcamento","dispatch","getState","itens","orcamentos","salvos","push","produtoIndex","findIndex","item","index"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,UAAN,EAAkBC,cAAlB,KAAqC;AACnE,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAIC,KAAK,GAAGD,QAAQ,GAAGE,UAAX,CAAsBC,MAAtB,CAA6BL,cAA7B,EAA6CG,KAAzD;;AACA,QAAI,CAACL,GAAL,EAAU;AACRK,MAAAA,KAAK,CAACG,IAAN,CAAW,EAAX;AACD,KAFD,MAEO;AACL,UAAIC,YAAY,GAAGJ,KAAK,CAACK,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACX,GAAL,KAAaA,GAAvC,CAAnB;;AAEA,UAAIS,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBJ,QAAAA,KAAK,CAACI,YAAD,CAAL,CAAoBR,UAApB,GAAiCA,UAAjC;AACD,OAFD,MAEO;AACLI,QAAAA,KAAK,CAACG,IAAN,CAAW;AAAER,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAX;AACD;AACF;;AAEDE,IAAAA,QAAQ,CAACN,WAAW,CAACQ,KAAD,EAAQH,cAAR,CAAZ,CAAR;AACAC,IAAAA,QAAQ,CAACL,aAAa,CAAC;AAAEc,MAAAA,KAAK,EAAEV;AAAT,KAAD,CAAd,CAAR;AACD,GAhBD;AAiBD,CAlBM;KAAMH,gB","sourcesContent":["import { trocarItens } from \"../Actions\";\r\nimport { saveOrcamento } from \"../SaveOrcamento\";\r\n\r\nexport const ChangeQuantidade = (sku, quantidade, indexOrcamento) => {\r\n  return (dispatch, getState) => {\r\n    let itens = getState().orcamentos.salvos[indexOrcamento].itens;\r\n    if (!sku) {\r\n      itens.push({});\r\n    } else {\r\n      let produtoIndex = itens.findIndex((item) => item.sku === sku);\r\n\r\n      if (produtoIndex !== -1) {\r\n        itens[produtoIndex].quantidade = quantidade;\r\n      } else {\r\n        itens.push({ sku, quantidade });\r\n      }\r\n    }\r\n\r\n    dispatch(trocarItens(itens, indexOrcamento));\r\n    dispatch(saveOrcamento({ index: indexOrcamento }));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}