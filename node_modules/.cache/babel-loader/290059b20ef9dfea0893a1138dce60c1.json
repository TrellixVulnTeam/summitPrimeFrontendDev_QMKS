{"ast":null,"code":"import { loading } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nexport const sendOrcamento = () => {\n  return async (dispatch, getState) => {\n    dispatch(loading(true));\n    let token = localStorage.getItem(\"token\");\n    let orcamentos = getState().orcamentos.salvos;\n    let orcamentoAtual = getState().orcamentos.atual;\n    let informacoes = getState().informacoes;\n    let orcamento = orcamentos.find(orc => {\n      return orc.id === orcamentoAtual;\n    });\n    let data = {\n      orcamento,\n      informacoes\n    };\n    await callBackend(\"/sendEmail\", token, data).then(dispatch(loading(false)));\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/SendOrcamento.js"],"names":["loading","callBackend","sendOrcamento","dispatch","getState","token","localStorage","getItem","orcamentos","salvos","orcamentoAtual","atual","informacoes","orcamento","find","orc","id","data","then"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCD,IAAAA,QAAQ,CAACH,OAAO,CAAC,IAAD,CAAR,CAAR;AACA,QAAIK,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,QAAIC,UAAU,GAAGJ,QAAQ,GAAGI,UAAX,CAAsBC,MAAvC;AACA,QAAIC,cAAc,GAAGN,QAAQ,GAAGI,UAAX,CAAsBG,KAA3C;AACA,QAAIC,WAAW,GAAGR,QAAQ,GAAGQ,WAA7B;AAEA,QAAIC,SAAS,GAAGL,UAAU,CAACM,IAAX,CAAiBC,GAAD,IAAS;AACvC,aAAOA,GAAG,CAACC,EAAJ,KAAWN,cAAlB;AACD,KAFe,CAAhB;AAIA,QAAIO,IAAI,GAAG;AAAEJ,MAAAA,SAAF;AAAaD,MAAAA;AAAb,KAAX;AAEA,UAAMX,WAAW,CAAC,YAAD,EAAeI,KAAf,EAAsBY,IAAtB,CAAX,CAAuCC,IAAvC,CAA4Cf,QAAQ,CAACH,OAAO,CAAC,KAAD,CAAR,CAApD,CAAN;AACD,GAdD;AAeD,CAhBM","sourcesContent":["import { loading } from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\n\r\nexport const sendOrcamento = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(loading(true));\r\n    let token = localStorage.getItem(\"token\");\r\n    let orcamentos = getState().orcamentos.salvos;\r\n    let orcamentoAtual = getState().orcamentos.atual;\r\n    let informacoes = getState().informacoes;\r\n\r\n    let orcamento = orcamentos.find((orc) => {\r\n      return orc.id === orcamentoAtual;\r\n    });\r\n\r\n    let data = { orcamento, informacoes };\r\n\r\n    await callBackend(\"/sendEmail\", token, data).then(dispatch(loading(false)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}