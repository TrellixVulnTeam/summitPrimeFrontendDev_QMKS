{"ast":null,"code":"import { setFiltros } from \"../Actions\";\nexport const ToggleFiltros = (mlce, categorias, isChecked) => {\n  return async (dispatch, getState) => {\n    let produtos = getState().databank.produtos;\n    let filtros = getState().loja.filtros;\n    filtros[mlce.toLowerCase()][categorias].checked = isChecked;\n    let allChecked = [];\n    let mlceKeys = Object.keys(filtros);\n\n    for (let i = 0; i < mlceKeys.length; i++) {\n      const mlceKey = filtros[mlceKeys[i]];\n      let categoriasKeys = Object.keys(mlceKey);\n\n      for (let j = 0; j < categoriasKeys.length; j++) {\n        const categoriasKey = mlceKey[categoriasKeys[j]];\n\n        if (categoriasKey.checked) {\n          let toPush = [mlceKeys[i], categoriasKeys[j]];\n          allChecked.push(toPush);\n        }\n      }\n    }\n\n    let produtosAtivos = [];\n\n    for (let i = 0; i < produtos.length; i++) {\n      const produto = produtos[i];\n      let flag = 1;\n\n      for (let j = 0; j < allChecked.length; j++) {\n        const checked = allChecked[j];\n\n        if (produto.tags[checked[0]] != checked[1]) {\n          flag = 0;\n        }\n      }\n\n      if (flag === 1) {\n        produtosAtivos.push(produto);\n      }\n    }\n\n    for (let i = 0; i < produtosAtivos.length; i++) {\n      const produtoAtivo = produtosAtivos[i];\n      let tagKeys = Object.keys(produtoAtivo.tags);\n\n      for (let k = 0; k < tagKeys.length; k++) {\n        const tagKey = tagKeys[k];\n        let valor = produtoAtivo.tags[tagKey];\n        filtros[tagKey][valor].quantidade = 0;\n      }\n\n      for (let j = 0; j < tagKeys.length; j++) {\n        const tagKey = tagKeys[j];\n        let valor = produtoAtivo.tags[tagKey];\n\n        if (filtros[tagKey] && filtros[tagKey][valor]) {\n          filtros[tagKey][valor].quantidade += 1;\n        } else {}\n      }\n    }\n\n    console.log(produtosAtivos);\n    dispatch(setFiltros(filtros));\n  };\n};\n_c = ToggleFiltros;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleFiltros\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/Loja/ToggleFiltros.js"],"names":["setFiltros","ToggleFiltros","mlce","categorias","isChecked","dispatch","getState","produtos","databank","filtros","loja","toLowerCase","checked","allChecked","mlceKeys","Object","keys","i","length","mlceKey","categoriasKeys","j","categoriasKey","toPush","push","produtosAtivos","produto","flag","tags","produtoAtivo","tagKeys","k","tagKey","valor","quantidade","console","log"],"mappings":"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","sourcesContent":["import { setFiltros } from \"../Actions\";\r\n\r\nexport const ToggleFiltros = (mlce, categorias, isChecked) => {\r\n  return async (dispatch, getState) => {\r\n    let produtos = getState().databank.produtos;\r\n    let filtros = getState().loja.filtros;\r\n\r\n    filtros[mlce.toLowerCase()][categorias].checked = isChecked;\r\n\r\n    let allChecked = [];\r\n\r\n    let mlceKeys = Object.keys(filtros);\r\n    for (let i = 0; i < mlceKeys.length; i++) {\r\n      const mlceKey = filtros[mlceKeys[i]];\r\n      let categoriasKeys = Object.keys(mlceKey);\r\n      for (let j = 0; j < categoriasKeys.length; j++) {\r\n        const categoriasKey = mlceKey[categoriasKeys[j]];\r\n\r\n        if (categoriasKey.checked) {\r\n          let toPush = [mlceKeys[i], categoriasKeys[j]];\r\n          allChecked.push(toPush);\r\n        }\r\n      }\r\n    }\r\n\r\n    let produtosAtivos = [];\r\n    for (let i = 0; i < produtos.length; i++) {\r\n      const produto = produtos[i];\r\n      let flag = 1;\r\n      for (let j = 0; j < allChecked.length; j++) {\r\n        const checked = allChecked[j];\r\n        if (produto.tags[checked[0]] != checked[1]) {\r\n          flag = 0;\r\n        }\r\n      }\r\n      if (flag === 1) {\r\n        produtosAtivos.push(produto);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < produtosAtivos.length; i++) {\r\n      const produtoAtivo = produtosAtivos[i];\r\n      let tagKeys = Object.keys(produtoAtivo.tags);\r\n      for (let k = 0; k < tagKeys.length; k++) {\r\n        const tagKey = tagKeys[k];\r\n        let valor = produtoAtivo.tags[tagKey];\r\n        filtros[tagKey][valor].quantidade = 0;\r\n      }\r\n      for (let j = 0; j < tagKeys.length; j++) {\r\n        const tagKey = tagKeys[j];\r\n        let valor = produtoAtivo.tags[tagKey];\r\n        if (filtros[tagKey] && filtros[tagKey][valor]) {\r\n          filtros[tagKey][valor].quantidade += 1;\r\n        } else {\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(produtosAtivos);\r\n    dispatch(setFiltros(filtros));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}