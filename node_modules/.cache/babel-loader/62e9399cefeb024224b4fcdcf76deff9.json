{"ast":null,"code":"import { changeItens } from \"../Actions\";\nimport { saveOrcamento } from \"../SaveOrcamento\";\nexport const ChangeQuantidade = (sku, quantidade) => {\n  return (dispatch, getState) => {\n    let orcamentos = getState().orcamentos;\n    let indexOrcamento = orcamentos.salvos.findIndex(orcamento => orcamento.id === orcamentos.atual);\n    let itens = getState().orcamentos.salvos[indexOrcamento].itens;\n    let produtoIndex = itens.findIndex(item => item.sku === sku);\n    itens[produtoIndex].quantidade = quantidade;\n    dispatch(changeItens(itens, indexOrcamento));\n    dispatch(saveOrcamento({\n      index: indexOrcamento\n    }));\n  };\n};\n_c = ChangeQuantidade;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeQuantidade\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/TabelaActions/ChangeQuantidade.js"],"names":["changeItens","saveOrcamento","ChangeQuantidade","sku","quantidade","dispatch","getState","orcamentos","indexOrcamento","salvos","findIndex","orcamento","id","atual","itens","produtoIndex","item","index"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACnD,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAIC,UAAU,GAAGD,QAAQ,GAAGC,UAA5B;AACA,QAAIC,cAAc,GAAGD,UAAU,CAACE,MAAX,CAAkBC,SAAlB,CAClBC,SAAD,IAAeA,SAAS,CAACC,EAAV,KAAiBL,UAAU,CAACM,KADxB,CAArB;AAGA,QAAIC,KAAK,GAAGR,QAAQ,GAAGC,UAAX,CAAsBE,MAAtB,CAA6BD,cAA7B,EAA6CM,KAAzD;AAEA,QAAIC,YAAY,GAAGD,KAAK,CAACJ,SAAN,CAAiBM,IAAD,IAAUA,IAAI,CAACb,GAAL,KAAaA,GAAvC,CAAnB;AAEAW,IAAAA,KAAK,CAACC,YAAD,CAAL,CAAoBX,UAApB,GAAiCA,UAAjC;AAEAC,IAAAA,QAAQ,CAACL,WAAW,CAACc,KAAD,EAAQN,cAAR,CAAZ,CAAR;AACAH,IAAAA,QAAQ,CAACJ,aAAa,CAAC;AAAEgB,MAAAA,KAAK,EAAET;AAAT,KAAD,CAAd,CAAR;AACD,GAbD;AAcD,CAfM;KAAMN,gB","sourcesContent":["import { changeItens } from \"../Actions\";\r\nimport { saveOrcamento } from \"../SaveOrcamento\";\r\n\r\nexport const ChangeQuantidade = (sku, quantidade) => {\r\n  return (dispatch, getState) => {\r\n    let orcamentos = getState().orcamentos;\r\n    let indexOrcamento = orcamentos.salvos.findIndex(\r\n      (orcamento) => orcamento.id === orcamentos.atual\r\n    );\r\n    let itens = getState().orcamentos.salvos[indexOrcamento].itens;\r\n\r\n    let produtoIndex = itens.findIndex((item) => item.sku === sku);\r\n\r\n    itens[produtoIndex].quantidade = quantidade;\r\n\r\n    dispatch(changeItens(itens, indexOrcamento));\r\n    dispatch(saveOrcamento({ index: indexOrcamento }));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}