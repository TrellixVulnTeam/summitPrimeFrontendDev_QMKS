{"ast":null,"code":"import { addOrcamento, changeOrcamentoAtivo, savingOrcamento, toggleLoading, toggleModal, toggleSaving, updateOrcamentos } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nimport { ChangePage } from \"./ChangePage\";\n\nvar crypto = require(\"crypto\");\n\nexport const SaveOrcamento = () => {\n  return (dispatch, getState) => {\n    try {\n      dispatch(toggleSaving(true));\n      console.log(\"salvando:\");\n      let {\n        socket,\n        orcamentoAtivo\n      } = getState().config;\n      let orcamentos = getState().databank.orcamentosPrime;\n      let token = localStorage.getItem(\"token\");\n      let orcamentoAtual = orcamentos[orcamentoAtivo];\n      console.log(orcamentoAtual); // callBackend(socket, \"saveOrcamento\", token, { ...orcamentoAtual }).then(\n      //   (r) => {\n      //     dispatch(toggleSaving(false));\n      //   }\n      // );\n    } catch (e) {\n      console.log(e);\n      dispatch(toggleSaving(false));\n    }\n  };\n};\n_c = SaveOrcamento;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveOrcamento\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/SaveOrcamento.js"],"names":["addOrcamento","changeOrcamentoAtivo","savingOrcamento","toggleLoading","toggleModal","toggleSaving","updateOrcamentos","callBackend","ChangePage","crypto","require","SaveOrcamento","dispatch","getState","console","log","socket","orcamentoAtivo","config","orcamentos","databank","orcamentosPrime","token","localStorage","getItem","orcamentoAtual","e"],"mappings":"AAAA,SACEA,YADF,EAEEC,oBAFF,EAGEC,eAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,gBAPF,QAQO,WARP;AASA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAI;AACFD,MAAAA,QAAQ,CAACP,YAAY,CAAC,IAAD,CAAb,CAAR;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAI;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAA6BJ,QAAQ,GAAGK,MAA5C;AACA,UAAIC,UAAU,GAAGN,QAAQ,GAAGO,QAAX,CAAoBC,eAArC;AACA,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAIC,cAAc,GAAGN,UAAU,CAACF,cAAD,CAA/B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYU,cAAZ,EAPE,CASF;AACA;AACA;AACA;AACA;AACD,KAdD,CAcE,OAAOC,CAAP,EAAU;AACVZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACAd,MAAAA,QAAQ,CAACP,YAAY,CAAC,KAAD,CAAb,CAAR;AACD;AACF,GAnBD;AAoBD,CArBM;KAAMM,a","sourcesContent":["import {\r\n  addOrcamento,\r\n  changeOrcamentoAtivo,\r\n  savingOrcamento,\r\n  toggleLoading,\r\n  toggleModal,\r\n  toggleSaving,\r\n  updateOrcamentos,\r\n} from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\nimport { ChangePage } from \"./ChangePage\";\r\nvar crypto = require(\"crypto\");\r\n\r\nexport const SaveOrcamento = () => {\r\n  return (dispatch, getState) => {\r\n    try {\r\n      dispatch(toggleSaving(true));\r\n      console.log(\"salvando:\");\r\n      let { socket, orcamentoAtivo } = getState().config;\r\n      let orcamentos = getState().databank.orcamentosPrime;\r\n      let token = localStorage.getItem(\"token\");\r\n      let orcamentoAtual = orcamentos[orcamentoAtivo];\r\n      console.log(orcamentoAtual);\r\n\r\n      // callBackend(socket, \"saveOrcamento\", token, { ...orcamentoAtual }).then(\r\n      //   (r) => {\r\n      //     dispatch(toggleSaving(false));\r\n      //   }\r\n      // );\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(toggleSaving(false));\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}