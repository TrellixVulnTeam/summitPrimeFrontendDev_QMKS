{"ast":null,"code":"import { logout, toggleLoading, updateDatabank } from \"../Actions\";\nimport { CalculateOrcamentosPrime } from \"../Orcamentos/CalculateOrcamentosPrime\";\nimport CallBackend from \"../Utils/CallBackend\";\nexport const getUserInfo = () => {\n  return async (dispatch, getState) => {\n    let {\n      socket\n    } = getState().config;\n    let token = localStorage.getItem(\"token\");\n\n    if (token) {\n      dispatch(toggleLoading(true));\n      await CallBackend(socket, \"getUserInfo\", token).then(async r => {\n        await dispatch(updateDatabank({\n          userInfo: r.informacoes\n        }));\n        await dispatch(updateDatabank({\n          produtos: r.produtos\n        }));\n        await dispatch(CalculateOrcamentosPrime(r.orcamentos));\n      }).catch(err => {\n        // dispatch(logout());\n        dispatch(toggleLoading(false));\n      });\n    } else {\n      dispatch(logout());\n      dispatch(toggleLoading(false));\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/Config/GetUserInfo.js"],"names":["logout","toggleLoading","updateDatabank","CalculateOrcamentosPrime","CallBackend","getUserInfo","dispatch","getState","socket","config","token","localStorage","getItem","then","r","userInfo","informacoes","produtos","orcamentos","catch","err"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,aAAjB,EAAgCC,cAAhC,QAAsD,YAAtD;AACA,SAASC,wBAAT,QAAyC,wCAAzC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAI;AAAEC,MAAAA;AAAF,QAAaD,QAAQ,GAAGE,MAA5B;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,QAAIF,KAAJ,EAAW;AACTJ,MAAAA,QAAQ,CAACL,aAAa,CAAC,IAAD,CAAd,CAAR;AACA,YAAMG,WAAW,CAACI,MAAD,EAAS,aAAT,EAAwBE,KAAxB,CAAX,CACHG,IADG,CACE,MAAOC,CAAP,IAAa;AACjB,cAAMR,QAAQ,CAACJ,cAAc,CAAC;AAAEa,UAAAA,QAAQ,EAAED,CAAC,CAACE;AAAd,SAAD,CAAf,CAAd;AACA,cAAMV,QAAQ,CAACJ,cAAc,CAAC;AAAEe,UAAAA,QAAQ,EAAEH,CAAC,CAACG;AAAd,SAAD,CAAf,CAAd;AACA,cAAMX,QAAQ,CAACH,wBAAwB,CAACW,CAAC,CAACI,UAAH,CAAzB,CAAd;AACD,OALG,EAMHC,KANG,CAMIC,GAAD,IAAS;AACd;AACAd,QAAAA,QAAQ,CAACL,aAAa,CAAC,KAAD,CAAd,CAAR;AACD,OATG,CAAN;AAUD,KAZD,MAYO;AACLK,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACAM,MAAAA,QAAQ,CAACL,aAAa,CAAC,KAAD,CAAd,CAAR;AACD;AACF,GAnBD;AAoBD,CArBM","sourcesContent":["import { logout, toggleLoading, updateDatabank } from \"../Actions\";\r\nimport { CalculateOrcamentosPrime } from \"../Orcamentos/CalculateOrcamentosPrime\";\r\nimport CallBackend from \"../Utils/CallBackend\";\r\n\r\nexport const getUserInfo = () => {\r\n  return async (dispatch, getState) => {\r\n    let { socket } = getState().config;\r\n    let token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      dispatch(toggleLoading(true));\r\n      await CallBackend(socket, \"getUserInfo\", token)\r\n        .then(async (r) => {\r\n          await dispatch(updateDatabank({ userInfo: r.informacoes }));\r\n          await dispatch(updateDatabank({ produtos: r.produtos }));\r\n          await dispatch(CalculateOrcamentosPrime(r.orcamentos));\r\n        })\r\n        .catch((err) => {\r\n          // dispatch(logout());\r\n          dispatch(toggleLoading(false));\r\n        });\r\n    } else {\r\n      dispatch(logout());\r\n      dispatch(toggleLoading(false));\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}