{"ast":null,"code":"import { changePage, updateOrcamentos } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nexport const DeleteOrcamento = () => {\n  return async (dispatch, getState) => {\n    try {\n      let token = localStorage.getItem(\"token\");\n      let index = getState().config.orcamentoAtivo;\n      let id = getState().databank.orcamentosPrime[index].id;\n      let {\n        socket\n      } = getState().pages;\n      callBackend(socket, \"deleteOrcamento\", token, {\n        id\n      });\n      dispatch(deleteOrcamento(index));\n      dispatch(changePage(\"salvos\"));\n      dispatch(updateOrcamentos({\n        atual: false\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n_c = DeleteOrcamento;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteOrcamento\");","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/DeleteOrcamento.js"],"names":["changePage","updateOrcamentos","callBackend","DeleteOrcamento","dispatch","getState","token","localStorage","getItem","index","config","orcamentoAtivo","id","databank","orcamentosPrime","socket","pages","deleteOrcamento","atual","error","console","log"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,gBAArB,QAA6C,WAA7C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAI;AACF,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAIC,KAAK,GAAGJ,QAAQ,GAAGK,MAAX,CAAkBC,cAA9B;AACA,UAAIC,EAAE,GAAGP,QAAQ,GAAGQ,QAAX,CAAoBC,eAApB,CAAoCL,KAApC,EAA2CG,EAApD;AACA,UAAI;AAAEG,QAAAA;AAAF,UAAaV,QAAQ,GAAGW,KAA5B;AACAd,MAAAA,WAAW,CAACa,MAAD,EAAS,iBAAT,EAA4BT,KAA5B,EAAmC;AAAEM,QAAAA;AAAF,OAAnC,CAAX;AACAR,MAAAA,QAAQ,CAACa,eAAe,CAACR,KAAD,CAAhB,CAAR;AACAL,MAAAA,QAAQ,CAACJ,UAAU,CAAC,QAAD,CAAX,CAAR;AACAI,MAAAA,QAAQ,CAACH,gBAAgB,CAAC;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OAAD,CAAjB,CAAR;AACD,KATD,CASE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAbD;AAcD,CAfM;KAAMhB,e","sourcesContent":["import { changePage, updateOrcamentos } from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\n\r\nexport const DeleteOrcamento = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let token = localStorage.getItem(\"token\");\r\n      let index = getState().config.orcamentoAtivo;\r\n      let id = getState().databank.orcamentosPrime[index].id;\r\n      let { socket } = getState().pages;\r\n      callBackend(socket, \"deleteOrcamento\", token, { id });\r\n      dispatch(deleteOrcamento(index));\r\n      dispatch(changePage(\"salvos\"));\r\n      dispatch(updateOrcamentos({ atual: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}