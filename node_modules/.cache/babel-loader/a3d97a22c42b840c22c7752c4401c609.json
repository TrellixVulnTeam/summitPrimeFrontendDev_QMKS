{"ast":null,"code":"import { savingOrcamento } from \"./Actions\";\nimport callBackend from \"./CallBackend\";\nexport const saveOrcamento = infos => {\n  return (dispatch, getState) => {\n    try {\n      dispatch(savingOrcamento(true));\n      let {\n        socket\n      } = getState().pages;\n      let token = localStorage.getItem(\"token\");\n      let {\n        subTotal,\n        subTotalDisponivel,\n        total,\n        totalDisponivel,\n        ...rest\n      } = infos;\n      let orcamento = { ...rest,\n        ultimaModificacao: new Date()\n      };\n      callBackend(socket, \"saveOrcamento\", token, { ...orcamento\n      }).then(r => {\n        dispatch(savingOrcamento(false));\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/rocan/OneDrive/Documents/SummitPrime/frontendDev/src/Redux/Actions/SaveOrcamento.js"],"names":["savingOrcamento","callBackend","saveOrcamento","infos","dispatch","getState","socket","pages","token","localStorage","getItem","subTotal","subTotalDisponivel","total","totalDisponivel","rest","orcamento","ultimaModificacao","Date","then","r","e","console","log"],"mappings":"AAAA,SAASA,eAAT,QAAgC,WAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAI;AACFD,MAAAA,QAAQ,CAACJ,eAAe,CAAC,IAAD,CAAhB,CAAR;AACA,UAAI;AAAEM,QAAAA;AAAF,UAAaD,QAAQ,GAAGE,KAA5B;AACA,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAI;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,kBAAZ;AAAgCC,QAAAA,KAAhC;AAAuCC,QAAAA,eAAvC;AAAwD,WAAGC;AAA3D,UACFZ,KADF;AAEA,UAAIa,SAAS,GAAG,EAAE,GAAGD,IAAL;AAAWE,QAAAA,iBAAiB,EAAE,IAAIC,IAAJ;AAA9B,OAAhB;AACAjB,MAAAA,WAAW,CAACK,MAAD,EAAS,eAAT,EAA0BE,KAA1B,EAAiC,EAAE,GAAGQ;AAAL,OAAjC,CAAX,CAA8DG,IAA9D,CACGC,CAAD,IAAO;AACLhB,QAAAA,QAAQ,CAACJ,eAAe,CAAC,KAAD,CAAhB,CAAR;AACD,OAHH;AAKD,KAZD,CAYE,OAAOqB,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAhBD;AAiBD,CAlBM","sourcesContent":["import { savingOrcamento } from \"./Actions\";\r\nimport callBackend from \"./CallBackend\";\r\n\r\nexport const saveOrcamento = (infos) => {\r\n  return (dispatch, getState) => {\r\n    try {\r\n      dispatch(savingOrcamento(true));\r\n      let { socket } = getState().pages;\r\n      let token = localStorage.getItem(\"token\");\r\n      let { subTotal, subTotalDisponivel, total, totalDisponivel, ...rest } =\r\n        infos;\r\n      let orcamento = { ...rest, ultimaModificacao: new Date() };\r\n      callBackend(socket, \"saveOrcamento\", token, { ...orcamento }).then(\r\n        (r) => {\r\n          dispatch(savingOrcamento(false));\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}